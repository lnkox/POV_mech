
AVRASM ver. 2.1.30  F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm Wed Jun 17 13:05:45 2015

F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1086): warning: Register r5 already defined by the .DEF directive
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1087): warning: Register r6 already defined by the .DEF directive
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1088): warning: Register r7 already defined by the .DEF directive
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1089): warning: Register r4 already defined by the .DEF directive
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1090): warning: Register r8 already defined by the .DEF directive
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1091): warning: Register r9 already defined by the .DEF directive
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1092): warning: Register r10 already defined by the .DEF directive
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1093): warning: Register r11 already defined by the .DEF directive
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1094): warning: Register r12 already defined by the .DEF directive
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1095): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega8
                 ;Program type           : Application
                 ;Clock frequency        : 8,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _n_pic=R5
                 	.DEF _zdvug=R6
                 	.DEF _zdvug_msb=R7
                 	.DEF _ready=R4
                 	.DEF _tmr_int=R8
                 	.DEF _tmr_int_msb=R9
                 	.DEF _vzdvug=R10
                 	.DEF _vzdvug_msb=R11
                 	.DEF _old_int=R12
                 	.DEF _old_int_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c8fc      	RJMP __RESET
000001 c9a5      	RJMP _ext_int0_isr
000002 c9fb      	RJMP _ext_int1_isr
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 ca07      	RJMP _timer1_ovf_isr
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _a:
000013 0100
000014 0101
000015 c181
000016 2161      	.DB  0x0,0x1,0x1,0x1,0x81,0xC1,0x61,0x21
000017 2121
000018 4161
000019 e101
00001a 21e1      	.DB  0x21,0x21,0x61,0x41,0x1,0xE1,0xE1,0x21
00001b 2121
00001c e1e1
00001d 0101
00001e 8101      	.DB  0x21,0x21,0xE1,0xE1,0x1,0x1,0x1,0x81
00001f 61e1
000020 81e1
000021 0101
000022 e101      	.DB  0xE1,0x61,0xE1,0x81,0x1,0x1,0x1,0xE1
000023 21e1
000024 2121
000025 c1e1
000026 0101      	.DB  0xE1,0x21,0x21,0x21,0xE1,0xC1,0x1,0x1
000027 8101
000028 61e1
000029 81e1
00002a 0101      	.DB  0x1,0x81,0xE1,0x61,0xE1,0x81,0x1,0x1
00002b 0101
00002c 0101
00002d e161
00002e 0181      	.DB  0x1,0x1,0x1,0x1,0x61,0xE1,0x81,0x1
00002f 8101
000030 61e1
000031 e101
000032 01e1      	.DB  0x1,0x81,0xE1,0x61,0x1,0xE1,0xE1,0x1
000033 c181
000034 2161
000035 e101
000036 21e1      	.DB  0x81,0xC1,0x61,0x21,0x1,0xE1,0xE1,0x21
000037 2121
000038 c1e1
000039 0101
00003a 8101      	.DB  0x21,0x21,0xE1,0xC1,0x1,0x1,0x1,0x81
00003b 61e1
00003c 81e1
00003d 0101
00003e e109      	.DB  0xE1,0x61,0xE1,0x81,0x1,0x1,0x9,0xE1
00003f 09e1
000040 e101
000041 01e1
000042 0101      	.DB  0xE1,0x9,0x1,0xE1,0xE1,0x1,0x1,0x1
000043 e1e1
000044 0101
000045 e1e1
000046 0101      	.DB  0xE1,0xE1,0x1,0x1,0xE1,0xE1,0x1,0x1
000047 0101
000048 0101
000049 0101
00004a ffff      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0xFF,0xFF
00004b 0101
00004c fd01
00004d 31f9
00004e 01e1      	.DB  0x1,0x1,0x1,0xFD,0xF9,0x31,0xE1,0x1
00004f fd01
000050 01fd
000051 e101
000052 f931      	.DB  0x1,0xFD,0xFD,0x1,0x1,0xE1,0x31,0xF9
000053 01fd
000054 0101
000055 ffff
000056 0101      	.DB  0xFD,0x1,0x1,0x1,0xFF,0xFF,0x1,0x1
000057 0101
000058 0101
000059 0101
00005a e101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0xE1
00005b 21e1
00005c 2121
00005d 0121
00005e e1e1      	.DB  0xE1,0x21,0x21,0x21,0x21,0x1,0xE1,0xE1
00005f 2121
000060 2121
000061 0101
000062 e1e1      	.DB  0x21,0x21,0x21,0x21,0x1,0x1,0xE1,0xE1
000063 2121
000064 e121
000065 01c1
000066 8101      	.DB  0x21,0x21,0x21,0xE1,0xC1,0x1,0x1,0x81
000067 61c1
000068 2121
000069 c161
00006a 0181      	.DB  0xC1,0x61,0x21,0x21,0x61,0xC1,0x81,0x1
00006b c101
00006c 21e1
00006d 2121
00006e e1e1      	.DB  0x1,0xC1,0xE1,0x21,0x21,0x21,0xE1,0xE1
00006f 0101
000070 e1e1
000071 81e1
000072 8101      	.DB  0x1,0x1,0xE1,0xE1,0xE1,0x81,0x1,0x81
000073 e1e1
000074 01e1
000075 0101
000076 0101      	.DB  0xE1,0xE1,0xE1,0x1,0x1,0x1,0x1,0x1
000077 8101
000078 61c1
000079 2121
00007a 6121      	.DB  0x1,0x81,0xC1,0x61,0x21,0x21,0x21,0x61
00007b 0141
00007c e1e1
00007d 2121
00007e e121      	.DB  0x41,0x1,0xE1,0xE1,0x21,0x21,0x21,0xE1
00007f 01e1
000080 0101
000081 e181
000082 e161      	.DB  0xE1,0x1,0x1,0x1,0x81,0xE1,0x61,0xE1
000083 0181
000084 0101
000085 e1e1
000086 2121      	.DB  0x81,0x1,0x1,0x1,0xE1,0xE1,0x21,0x21
000087 e121
000088 01c1
000089 0101
00008a e181      	.DB  0x21,0xE1,0xC1,0x1,0x1,0x1,0x81,0xE1
00008b e161
00008c 0181
00008d 0101
00008e 0101      	.DB  0x61,0xE1,0x81,0x1,0x1,0x1,0x1,0x1
00008f 0101
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1156): warning: .cseg .db misalignment - padding zero byte
000090 0001      	.DB  0x1,0x1,0x1
                 _b:
000091 0000
000092 0000
000093 3f1f
000094 4060      	.DB  0x0,0x0,0x0,0x0,0x1F,0x3F,0x60,0x40
000095 4040
000096 2060
000097 7f40
000098 003f      	.DB  0x40,0x40,0x60,0x20,0x40,0x7F,0x3F,0x0
000099 0000
00009a 7f7f
00009b 6000
00009c 1f7c      	.DB  0x0,0x0,0x7F,0x7F,0x0,0x60,0x7C,0x1F
00009d 1013
00009e 1f13
00009f 607c
0000a0 7f00      	.DB  0x13,0x10,0x13,0x1F,0x7C,0x60,0x0,0x7F
0000a1 427f
0000a2 4242
0000a3 3d7f
0000a4 6000      	.DB  0x7F,0x42,0x42,0x42,0x7F,0x3D,0x0,0x60
0000a5 1f7c
0000a6 1013
0000a7 1f13
0000a8 607c      	.DB  0x7C,0x1F,0x13,0x10,0x13,0x1F,0x7C,0x60
0000a9 0000
0000aa 0000
0000ab 4100
0000ac 7e47      	.DB  0x0,0x0,0x0,0x0,0x0,0x41,0x47,0x7E
0000ad 0f3c
0000ae 0003
0000af 7f00
0000b0 027f      	.DB  0x3C,0xF,0x3,0x0,0x0,0x7F,0x7F,0x2
0000b1 3d0f
0000b2 4070
0000b3 7f00
0000b4 047f      	.DB  0xF,0x3D,0x70,0x40,0x0,0x7F,0x7F,0x4
0000b5 0404
0000b6 0307
0000b7 6000
0000b8 1f7c      	.DB  0x4,0x4,0x7,0x3,0x0,0x60,0x7C,0x1F
0000b9 1013
0000ba 1f13
0000bb 607c
0000bc 7f00      	.DB  0x13,0x10,0x13,0x1F,0x7C,0x60,0x0,0x7F
0000bd 007f
0000be 7f00
0000bf 027f
0000c0 0202      	.DB  0x7F,0x0,0x0,0x7F,0x7F,0x2,0x2,0x2
0000c1 7f7f
0000c2 0000
0000c3 7f7f
0000c4 0000      	.DB  0x7F,0x7F,0x0,0x0,0x7F,0x7F,0x0,0x0
0000c5 0000
0000c6 0000
0000c7 0000
0000c8 ffff      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0xFF,0xFF
0000c9 0000
0000ca 7f00
0000cb 4c7f
0000cc f05f      	.DB  0x0,0x0,0x0,0x7F,0x7F,0x4C,0x5F,0xF0
0000cd 67fc
0000ce fc67
0000cf 5ff0
0000d0 7f4c      	.DB  0xFC,0x67,0x67,0xFC,0xF0,0x5F,0x4C,0x7F
0000d1 007f
0000d2 0000
0000d3 ffff
0000d4 0000      	.DB  0x7F,0x0,0x0,0x0,0xFF,0xFF,0x0,0x0
0000d5 0000
0000d6 0000
0000d7 0000
0000d8 7f00      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x7F
0000d9 007f
0000da 0000
0000db 0000
0000dc 7f7f      	.DB  0x7F,0x0,0x0,0x0,0x0,0x0,0x7F,0x7F
0000dd 4242
0000de 4242
0000df 0000
0000e0 7f7f      	.DB  0x42,0x42,0x42,0x42,0x0,0x0,0x7F,0x7F
0000e1 0404
0000e2 0704
0000e3 0003
0000e4 1f00      	.DB  0x4,0x4,0x4,0x7,0x3,0x0,0x0,0x1F
0000e5 603f
0000e6 4040
0000e7 3f60
0000e8 001f      	.DB  0x3F,0x60,0x40,0x40,0x60,0x3F,0x1F,0x0
0000e9 7340
0000ea 0c3f
0000eb 0404
0000ec 7f7f      	.DB  0x40,0x73,0x3F,0xC,0x4,0x4,0x7F,0x7F
0000ed 0000
0000ee 7f7f
0000ef 3f01
0000f0 3f70      	.DB  0x0,0x0,0x7F,0x7F,0x1,0x3F,0x70,0x3F
0000f1 7f01
0000f2 007f
0000f3 0000
0000f4 0000      	.DB  0x1,0x7F,0x7F,0x0,0x0,0x0,0x0,0x0
0000f5 1f00
0000f6 603f
0000f7 4040
0000f8 6040      	.DB  0x0,0x1F,0x3F,0x60,0x40,0x40,0x40,0x60
0000f9 4020
0000fa 3f7f
0000fb 0000
0000fc 7f00      	.DB  0x20,0x40,0x7F,0x3F,0x0,0x0,0x0,0x7F
0000fd 007f
0000fe 7c60
0000ff 131f
000100 1310      	.DB  0x7F,0x0,0x60,0x7C,0x1F,0x13,0x10,0x13
000101 7c1f
000102 0060
000103 7f7f
000104 4242      	.DB  0x1F,0x7C,0x60,0x0,0x7F,0x7F,0x42,0x42
000105 7f42
000106 003d
000107 7c60
000108 131f      	.DB  0x42,0x7F,0x3D,0x0,0x60,0x7C,0x1F,0x13
000109 1310
00010a 7c1f
00010b 0060
00010c 0000      	.DB  0x10,0x13,0x1F,0x7C,0x60,0x0,0x0,0x0
00010d 0000
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1189): warning: .cseg .db misalignment - padding zero byte
00010e 0000      	.DB  0x0,0x0,0x0
                 _c:
00010f 0800
000110 0808
000111 0808
000112 0808      	.DB  0x0,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000113 0808
000114 0808
000115 0808
000116 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000117 0808
000118 0808
000119 0808
00011a 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00011b 0808
00011c 0808
00011d 0808
00011e 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00011f 0808
000120 0808
000121 0808
000122 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000123 0808
000124 0808
000125 0808
000126 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000127 0808
000128 0808
000129 0808
00012a 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00012b 0808
00012c 0808
00012d 0808
00012e 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00012f 0808
000130 0808
000131 0808
000132 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000133 0808
000134 0808
000135 0808
000136 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000137 0808
000138 0808
000139 0808
00013a 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00013b 0808
00013c 0808
00013d 0808
00013e 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00013f 0808
000140 0808
000141 0808
000142 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000143 0808
000144 0808
000145 0808
000146 0b09      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x9,0xB
000147 0c0e
000148 0808
000149 0808
00014a 0808      	.DB  0xE,0xC,0x8,0x8,0x8,0x8,0x8,0x8
00014b 0b09
00014c 090b
00014d 0808
00014e 0808      	.DB  0x9,0xB,0xB,0x9,0x8,0x8,0x8,0x8
00014f 0808
000150 0e0c
000151 090b
000152 0808      	.DB  0x8,0x8,0xC,0xE,0xB,0x9,0x8,0x8
000153 0808
000154 0808
000155 0808
000156 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000157 0808
000158 0808
000159 0808
00015a 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00015b 0808
00015c 0808
00015d 0808
00015e 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00015f 0808
000160 0808
000161 0808
000162 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000163 0808
000164 0808
000165 0808
000166 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000167 0808
000168 0808
000169 0808
00016a 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00016b 0808
00016c 0808
00016d 0808
00016e 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00016f 0808
000170 0808
000171 0808
000172 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000173 0808
000174 0808
000175 0808
000176 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000177 0808
000178 0808
000179 0808
00017a 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00017b 0808
00017c 0808
00017d 0808
00017e 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00017f 0808
000180 0808
000181 0808
000182 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000183 0808
000184 0808
000185 0808
000186 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000187 0808
000188 0808
000189 0808
00018a 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00018b 0808
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1222): warning: .cseg .db misalignment - padding zero byte
00018c 0008      	.DB  0x8,0x8,0x8
                 _a2:
00018d 0100
00018e 0101
00018f 0101
000190 0101      	.DB  0x0,0x1,0x1,0x1,0x1,0x1,0x1,0x1
000191 0101
000192 c101
000193 61c1
000194 e161      	.DB  0x1,0x1,0x1,0xC1,0xC1,0x61,0x61,0xE1
000195 01e1
000196 e101
000197 61e1
000198 6161      	.DB  0xE1,0x1,0x1,0xE1,0xE1,0x61,0x61,0x61
000199 e1e1
00019a 0101
00019b 0101
00019c 8101      	.DB  0xE1,0xE1,0x1,0x1,0x1,0x1,0x1,0x81
00019d e1c1
00019e 0101
00019f 0101
0001a0 e1e1      	.DB  0xC1,0xE1,0x1,0x1,0x1,0x1,0xE1,0xE1
0001a1 6161
0001a2 c1c1
0001a3 0101
0001a4 0101      	.DB  0x61,0x61,0xC1,0xC1,0x1,0x1,0x1,0x1
0001a5 8101
0001a6 e1c1
0001a7 0101
0001a8 0101      	.DB  0x1,0x81,0xC1,0xE1,0x1,0x1,0x1,0x1
0001a9 0101
0001aa 0101
0001ab 0101
0001ac e1e1      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0xE1,0xE1
0001ad 0101
0001ae 0101
0001af e1e1
0001b0 0101      	.DB  0x1,0x1,0x1,0x1,0xE1,0xE1,0x1,0x1
0001b1 0101
0001b2 8101
0001b3 e1c1
0001b4 0101      	.DB  0x1,0x1,0x1,0x81,0xC1,0xE1,0x1,0x1
0001b5 0101
0001b6 e1e1
0001b7 0101
0001b8 0101      	.DB  0x1,0x1,0xE1,0xE1,0x1,0x1,0x1,0x1
0001b9 e1e1
0001ba 6101
0001bb e161
0001bc 61e1      	.DB  0xE1,0xE1,0x1,0x61,0x61,0xE1,0xE1,0x61
0001bd 0161
0001be 6d61
0001bf e1ed
0001c0 6d6d      	.DB  0x61,0x1,0x61,0x6D,0xED,0xE1,0x6D,0x6D
0001c1 0101
0001c2 e1e1
0001c3 0101
0001c4 0101      	.DB  0x1,0x1,0xE1,0xE1,0x1,0x1,0x1,0x1
0001c5 0101
0001c6 0101
0001c7 0101
0001c8 c1c1      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0xC1,0xC1
0001c9 6161
0001ca e1e1
0001cb 0101
0001cc e1e1      	.DB  0x61,0x61,0xE1,0xE1,0x1,0x1,0xE1,0xE1
0001cd 0101
0001ce e101
0001cf 01e1
0001d0 e101      	.DB  0x1,0x1,0x1,0xE1,0xE1,0x1,0x1,0xE1
0001d1 61e1
0001d2 6161
0001d3 6161
0001d4 0101      	.DB  0xE1,0x61,0x61,0x61,0x61,0x61,0x1,0x1
0001d5 e1e1
0001d6 e161
0001d7 01c1
0001d8 6161      	.DB  0xE1,0xE1,0x61,0xE1,0xC1,0x1,0x61,0x61
0001d9 e161
0001da 61e1
0001db 6161
0001dc 0101      	.DB  0x61,0xE1,0xE1,0x61,0x61,0x61,0x1,0x1
0001dd e1e1
0001de 0101
0001df 0101
0001e0 0101      	.DB  0xE1,0xE1,0x1,0x1,0x1,0x1,0x1,0x1
0001e1 0101
0001e2 0101
0001e3 0101
0001e4 e1e1      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0xE1,0xE1
0001e5 6161
0001e6 c1c1
0001e7 0101
0001e8 c181      	.DB  0x61,0x61,0xC1,0xC1,0x1,0x1,0x81,0xC1
0001e9 61e1
0001ea 6161
0001eb c1e1
0001ec 0181      	.DB  0xE1,0x61,0x61,0x61,0xE1,0xC1,0x81,0x1
0001ed e1e1
0001ee e161
0001ef 01c1
0001f0 8101      	.DB  0xE1,0xE1,0x61,0xE1,0xC1,0x1,0x1,0x81
0001f1 e1c1
0001f2 6161
0001f3 e161
0001f4 81c1      	.DB  0xC1,0xE1,0x61,0x61,0x61,0xE1,0xC1,0x81
0001f5 e101
0001f6 61e1
0001f7 6161
0001f8 6161      	.DB  0x1,0xE1,0xE1,0x61,0x61,0x61,0x61,0x61
0001f9 0101
0001fa 8101
0001fb e1c1
0001fc 0101      	.DB  0x1,0x1,0x1,0x81,0xC1,0xE1,0x1,0x1
0001fd 0101
0001fe e101
0001ff 01e1
000200 0101      	.DB  0x1,0x1,0x1,0xE1,0xE1,0x1,0x1,0x1
000201 e1e1
000202 0101
000203 e101
000204 01e1      	.DB  0xE1,0xE1,0x1,0x1,0x1,0xE1,0xE1,0x1
000205 0101
000206 0101
000207 0101
000208 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
000209 0101
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1255): warning: .cseg .db misalignment - padding zero byte
00020a 0001      	.DB  0x1,0x1,0x1
                 _b2:
00020b 0000
00020c 0000
00020d 0000
00020e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00020f 1e00
000210 633f
000211 6060
000212 3060      	.DB  0x0,0x1E,0x3F,0x63,0x60,0x60,0x60,0x30
000213 4030
000214 7f40
000215 003f
000216 0000      	.DB  0x30,0x40,0x40,0x7F,0x3F,0x0,0x0,0x0
000217 7f7f
000218 0000
000219 7860
00021a 0f1e      	.DB  0x7F,0x7F,0x0,0x0,0x60,0x78,0x1E,0xF
00021b 0f0d
00021c 607f
00021d 0000
00021e 7f7f      	.DB  0xD,0xF,0x7F,0x60,0x0,0x0,0x7F,0x7F
00021f 6666
000220 3d77
000221 0018
000222 7860      	.DB  0x66,0x66,0x77,0x3D,0x18,0x0,0x60,0x78
000223 0f1e
000224 0f0d
000225 607f
000226 0000      	.DB  0x1E,0xF,0xD,0xF,0x7F,0x60,0x0,0x0
000227 0000
000228 0000
000229 0000
00022a 7f7f      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x7F,0x7F
00022b 0606
00022c 0606
00022d 7f7f
00022e 0000      	.DB  0x6,0x6,0x6,0x6,0x7F,0x7F,0x0,0x0
00022f 7860
000230 0f1e
000231 0f0d
000232 607f      	.DB  0x60,0x78,0x1E,0xF,0xD,0xF,0x7F,0x60
000233 0000
000234 7f7f
000235 6060
000236 6060      	.DB  0x0,0x0,0x7F,0x7F,0x60,0x60,0x60,0x60
000237 ff7f
000238 60e0
000239 7f60
00023a 607f      	.DB  0x7F,0xFF,0xE0,0x60,0x60,0x7F,0x7F,0x60
00023b 0060
00023c 6060
00023d 7f7f
00023e 6060      	.DB  0x60,0x0,0x60,0x60,0x7F,0x7F,0x60,0x60
00023f 0000
000240 6f6f
000241 0c00
000242 0c0c      	.DB  0x0,0x0,0x6F,0x6F,0x0,0xC,0xC,0xC
000243 0c0c
000244 0000
000245 3f1e
000246 6063      	.DB  0xC,0xC,0x0,0x0,0x1E,0x3F,0x63,0x60
000247 6060
000248 3030
000249 7f70
00024a 0f0f      	.DB  0x60,0x60,0x30,0x30,0x70,0x7F,0xF,0xF
00024b 787f
00024c 031f
00024d 7c7f
00024e 3f00      	.DB  0x7F,0x78,0x1F,0x3,0x7F,0x7C,0x0,0x3F
00024f 667f
000250 6666
000251 6666
000252 0000      	.DB  0x7F,0x66,0x66,0x66,0x66,0x66,0x0,0x0
000253 7f7f
000254 0706
000255 0003
000256 0000      	.DB  0x7F,0x7F,0x6,0x7,0x3,0x0,0x0,0x0
000257 7f00
000258 007f
000259 0000
00025a 0000      	.DB  0x0,0x7F,0x7F,0x0,0x0,0x0,0x0,0x0
00025b 7f7f
00025c 6363
00025d 3e7f
00025e 0000      	.DB  0x7F,0x7F,0x63,0x63,0x7F,0x3E,0x0,0x0
00025f 0000
000260 0000
000261 0000
000262 7f7f      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x7F,0x7F
000263 6666
000264 3d77
000265 1f18
000266 713f      	.DB  0x66,0x66,0x77,0x3D,0x18,0x1F,0x3F,0x71
000267 6060
000268 7060
000269 1f38
00026a 000f      	.DB  0x60,0x60,0x60,0x70,0x38,0x1F,0xF,0x0
00026b 7f7f
00026c 0706
00026d 0003
00026e 3f1f      	.DB  0x7F,0x7F,0x6,0x7,0x3,0x0,0x1F,0x3F
00026f 6071
000270 6060
000271 3870
000272 0f1f      	.DB  0x71,0x60,0x60,0x60,0x70,0x38,0x1F,0xF
000273 7f00
000274 007f
000275 0000
000276 0000      	.DB  0x0,0x7F,0x7F,0x0,0x0,0x0,0x0,0x0
000277 7860
000278 0f1e
000279 0f0d
00027a 607f      	.DB  0x60,0x78,0x1E,0xF,0xD,0xF,0x7F,0x60
00027b 7000
00027c 0f7f
00027d 7f0f
00027e 1f78      	.DB  0x0,0x70,0x7F,0xF,0xF,0x7F,0x78,0x1F
00027f 7f03
000280 007c
000281 6f00
000282 006f      	.DB  0x3,0x7F,0x7C,0x0,0x0,0x6F,0x6F,0x0
000283 0000
000284 0000
000285 0000
000286 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000287 0000
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1288): warning: .cseg .db misalignment - padding zero byte
000288 0000      	.DB  0x0,0x0,0x0
                 _c2:
000289 0800
00028a 0808
00028b 0808
00028c 0808      	.DB  0x0,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00028d 0808
00028e 0808
00028f 0808
000290 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000291 0808
000292 0808
000293 0808
000294 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000295 0808
000296 0808
000297 0808
000298 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000299 0808
00029a 0808
00029b 0808
00029c 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00029d 0808
00029e 0808
00029f 0808
0002a0 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002a1 0808
0002a2 0808
0002a3 0808
0002a4 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002a5 0808
0002a6 0808
0002a7 0808
0002a8 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002a9 0808
0002aa 0808
0002ab 0808
0002ac 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002ad 0808
0002ae 0808
0002af 0808
0002b0 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002b1 0808
0002b2 0808
0002b3 0808
0002b4 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002b5 0908
0002b6 0809
0002b7 0808
0002b8 0808      	.DB  0x8,0x9,0x9,0x8,0x8,0x8,0x8,0x8
0002b9 0808
0002ba 0808
0002bb 0808
0002bc 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002bd 0808
0002be 0808
0002bf 0808
0002c0 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002c1 0808
0002c2 0808
0002c3 0808
0002c4 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002c5 0808
0002c6 0808
0002c7 0808
0002c8 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002c9 0808
0002ca 0808
0002cb 0808
0002cc 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002cd 0808
0002ce 0808
0002cf 0808
0002d0 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002d1 0808
0002d2 0808
0002d3 0808
0002d4 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002d5 0808
0002d6 0808
0002d7 0808
0002d8 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002d9 0808
0002da 0808
0002db 0808
0002dc 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002dd 0808
0002de 0808
0002df 0808
0002e0 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002e1 0808
0002e2 0808
0002e3 0808
0002e4 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002e5 0808
0002e6 0808
0002e7 0808
0002e8 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002e9 0808
0002ea 0808
0002eb 0808
0002ec 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002ed 0808
0002ee 0808
0002ef 0808
0002f0 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002f1 0808
0002f2 0808
0002f3 0808
0002f4 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002f5 0808
0002f6 0808
0002f7 0808
0002f8 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002f9 0808
0002fa 0808
0002fb 0808
0002fc 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
0002fd 0808
0002fe 0808
0002ff 0808
000300 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000301 0808
000302 0808
000303 0808
000304 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000305 0808
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1321): warning: .cseg .db misalignment - padding zero byte
000306 0008      	.DB  0x8,0x8,0x8
                 _a3:
000307 ff00
000308 ffff
000309 ffff
00030a ffff      	.DB  0x0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00030b ffff
00030c ffff
00030d ffff
00030e ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00030f ffff
000310 ffff
000311 ffff
000312 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
000313 ffff
000314 ffff
000315 ffff
000316 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
000317 ffff
000318 ffff
000319 ffff
00031a ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00031b 01ff
00031c 0101
00031d 0101
00031e 6101      	.DB  0xFF,0x1,0x1,0x1,0x1,0x1,0x1,0x61
00031f 81e1
000320 0101
000321 e181
000322 0161      	.DB  0xE1,0x81,0x1,0x1,0x81,0xE1,0x61,0x1
000323 e1e1
000324 e101
000325 21e1
000326 0101      	.DB  0xE1,0xE1,0x1,0xE1,0xE1,0x21,0x1,0x1
000327 e1e1
000328 e161
000329 01c1
00032a 0101      	.DB  0xE1,0xE1,0x61,0xE1,0xC1,0x1,0x1,0x1
00032b 0101
00032c c181
00032d 01e1
00032e 0101      	.DB  0x1,0x1,0x81,0xC1,0xE1,0x1,0x1,0x1
00032f 6d61
000330 e1ed
000331 6d6d
000332 0101      	.DB  0x61,0x6D,0xED,0xE1,0x6D,0x6D,0x1,0x1
000333 e1e1
000334 0101
000335 0101
000336 e1e1      	.DB  0xE1,0xE1,0x1,0x1,0x1,0x1,0xE1,0xE1
000337 0101
000338 0101
000339 8101
00033a e1c1      	.DB  0x1,0x1,0x1,0x1,0x1,0x81,0xC1,0xE1
00033b 0101
00033c 0101
00033d 0101
00033e 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
00033f 6101
000340 e161
000341 61e1
000342 6161      	.DB  0x1,0x61,0x61,0xE1,0xE1,0x61,0x61,0x61
000343 e161
000344 61e1
000345 0161
000346 c181      	.DB  0x61,0xE1,0xE1,0x61,0x61,0x1,0x81,0xC1
000347 61e1
000348 6161
000349 c1e1
00034a 0181      	.DB  0xE1,0x61,0x61,0x61,0xE1,0xC1,0x81,0x1
00034b e1e1
00034c 0101
00034d 0101
00034e e1e1      	.DB  0xE1,0xE1,0x1,0x1,0x1,0x1,0xE1,0xE1
00034f 0101
000350 0101
000351 8101
000352 e1c1      	.DB  0x1,0x1,0x1,0x1,0x1,0x81,0xC1,0xE1
000353 0101
000354 0101
000355 e101
000356 61e1      	.DB  0x1,0x1,0x1,0x1,0x1,0xE1,0xE1,0x61
000357 6161
000358 e1e1
000359 0101
00035a 0101      	.DB  0x61,0x61,0xE1,0xE1,0x1,0x1,0x1,0x1
00035b 0101
00035c 6101
00035d 81e1
00035e 0101      	.DB  0x1,0x1,0x1,0x61,0xE1,0x81,0x1,0x1
00035f e181
000360 0161
000361 c101
000362 61c1      	.DB  0x81,0xE1,0x61,0x1,0x1,0xC1,0xC1,0x61
000363 e161
000364 e1e1
000365 61e1
000366 6161      	.DB  0x61,0xE1,0xE1,0xE1,0xE1,0x61,0x61,0x61
000367 6161
000368 0101
000369 e1e1
00036a 0101      	.DB  0x61,0x61,0x1,0x1,0xE1,0xE1,0x1,0x1
00036b 0101
00036c 0101
00036d 0101
00036e 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
00036f 0101
000370 ff01
000371 ffff
000372 ffff      	.DB  0x1,0x1,0x1,0xFF,0xFF,0xFF,0xFF,0xFF
000373 ffff
000374 ffff
000375 ffff
000376 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
000377 ffff
000378 ffff
000379 ffff
00037a ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00037b ffff
00037c ffff
00037d ffff
00037e ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00037f ffff
000380 ffff
000381 ffff
000382 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
000383 ffff
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1354): warning: .cseg .db misalignment - padding zero byte
000384 00ff      	.DB  0xFF,0xFF,0xFF
                 _b3:
000385 ff00
000386 ffff
000387 ffff
000388 ffff      	.DB  0x0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
000389 ffff
00038a ffff
00038b ffff
00038c ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00038d ffff
00038e ffff
00038f ffff
000390 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
000391 ffff
000392 ffff
000393 ffff
000394 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
000395 ffff
000396 ffff
000397 ffff
000398 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
000399 00ff
00039a 0000
00039b 0000
00039c 0000      	.DB  0xFF,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00039d 4340
00039e 3c6f
00039f 030f
0003a0 0000      	.DB  0x40,0x43,0x6F,0x3C,0xF,0x3,0x0,0x0
0003a1 7f7f
0003a2 0f03
0003a3 707d
0003a4 0000      	.DB  0x7F,0x7F,0x3,0xF,0x7D,0x70,0x0,0x0
0003a5 7f7f
0003a6 0706
0003a7 0003
0003a8 6000      	.DB  0x7F,0x7F,0x6,0x7,0x3,0x0,0x0,0x60
0003a9 1e78
0003aa 0d0f
0003ab 7f0f
0003ac 0060      	.DB  0x78,0x1E,0xF,0xD,0xF,0x7F,0x60,0x0
0003ad 6060
0003ae 7f7f
0003af 6060
0003b0 0000      	.DB  0x60,0x60,0x7F,0x7F,0x60,0x60,0x0,0x0
0003b1 7f7f
0003b2 0606
0003b3 0606
0003b4 7f7f      	.DB  0x7F,0x7F,0x6,0x6,0x6,0x6,0x7F,0x7F
0003b5 0000
0003b6 7860
0003b7 0f1e
0003b8 0f0d      	.DB  0x0,0x0,0x60,0x78,0x1E,0xF,0xD,0xF
0003b9 607f
0003ba 0000
0003bb 0000
0003bc 0000      	.DB  0x7F,0x60,0x0,0x0,0x0,0x0,0x0,0x0
0003bd 0000
0003be 7f00
0003bf 007f
0003c0 0000      	.DB  0x0,0x0,0x0,0x7F,0x7F,0x0,0x0,0x0
0003c1 7f00
0003c2 007f
0003c3 1f00
0003c4 713f      	.DB  0x0,0x7F,0x7F,0x0,0x0,0x1F,0x3F,0x71
0003c5 6060
0003c6 7060
0003c7 1f38
0003c8 000f      	.DB  0x60,0x60,0x60,0x70,0x38,0x1F,0xF,0x0
0003c9 7f7f
0003ca 0606
0003cb 0606
0003cc 7f7f      	.DB  0x7F,0x7F,0x6,0x6,0x6,0x6,0x7F,0x7F
0003cd 0000
0003ce 7860
0003cf 0f1e
0003d0 0f0d      	.DB  0x0,0x0,0x60,0x78,0x1E,0xF,0xD,0xF
0003d1 607f
0003d2 e000
0003d3 7ff0
0003d4 6067      	.DB  0x7F,0x60,0x0,0xE0,0xF0,0x7F,0x67,0x60
0003d5 6060
0003d6 ff7f
0003d7 00e0
0003d8 0000      	.DB  0x60,0x60,0x7F,0xFF,0xE0,0x0,0x0,0x0
0003d9 0000
0003da 0000
0003db 4340
0003dc 3c6f      	.DB  0x0,0x0,0x0,0x0,0x40,0x43,0x6F,0x3C
0003dd 030f
0003de 1e00
0003df 633f
0003e0 6060      	.DB  0xF,0x3,0x0,0x1E,0x3F,0x63,0x60,0x60
0003e1 3060
0003e2 3f30
0003e3 667f
0003e4 6666      	.DB  0x60,0x30,0x30,0x3F,0x7F,0x66,0x66,0x66
0003e5 6666
0003e6 0000
0003e7 6f6f
0003e8 0000      	.DB  0x66,0x66,0x0,0x0,0x6F,0x6F,0x0,0x0
0003e9 0000
0003ea 0000
0003eb 0000
0003ec 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0003ed 0000
0003ee ff00
0003ef ffff
0003f0 ffff      	.DB  0x0,0x0,0x0,0xFF,0xFF,0xFF,0xFF,0xFF
0003f1 ffff
0003f2 ffff
0003f3 ffff
0003f4 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
0003f5 ffff
0003f6 ffff
0003f7 ffff
0003f8 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
0003f9 ffff
0003fa ffff
0003fb ffff
0003fc ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
0003fd ffff
0003fe ffff
0003ff ffff
000400 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
000401 ffff
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1387): warning: .cseg .db misalignment - padding zero byte
000402 00ff      	.DB  0xFF,0xFF,0xFF
                 _c3:
000403 0f00
000404 0f0f
000405 0f0f
000406 0f0f      	.DB  0x0,0xF,0xF,0xF,0xF,0xF,0xF,0xF
000407 0f0f
000408 0f0f
000409 0f0f
00040a 0f0f      	.DB  0xF,0xF,0xF,0xF,0xF,0xF,0xF,0xF
00040b 0f0f
00040c 0f0f
00040d 0f0f
00040e 0f0f      	.DB  0xF,0xF,0xF,0xF,0xF,0xF,0xF,0xF
00040f 0f0f
000410 0f0f
000411 0f0f
000412 0f0f      	.DB  0xF,0xF,0xF,0xF,0xF,0xF,0xF,0xF
000413 0f0f
000414 0f0f
000415 0f0f
000416 0f0f      	.DB  0xF,0xF,0xF,0xF,0xF,0xF,0xF,0xF
000417 080f
000418 0808
000419 0808
00041a 0808      	.DB  0xF,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00041b 0808
00041c 0808
00041d 0808
00041e 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00041f 0808
000420 0808
000421 0808
000422 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000423 0808
000424 0808
000425 0808
000426 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000427 0808
000428 0808
000429 0808
00042a 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00042b 0808
00042c 0808
00042d 0808
00042e 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00042f 0808
000430 0808
000431 0808
000432 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000433 0808
000434 0808
000435 0808
000436 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000437 0808
000438 0808
000439 0808
00043a 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00043b 0808
00043c 0808
00043d 0808
00043e 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00043f 0808
000440 0808
000441 0808
000442 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000443 0808
000444 0808
000445 0808
000446 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000447 0808
000448 0808
000449 0808
00044a 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00044b 0808
00044c 0808
00044d 0808
00044e 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00044f 0808
000450 0808
000451 0808
000452 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000453 0808
000454 0808
000455 0808
000456 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000457 0808
000458 0808
000459 0808
00045a 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00045b 0808
00045c 0808
00045d 0808
00045e 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00045f 0808
000460 0808
000461 0808
000462 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000463 0808
000464 0808
000465 0808
000466 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
000467 0808
000468 0808
000469 0808
00046a 0808      	.DB  0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8
00046b 0808
00046c 0f08
00046d 0f0f
00046e 0f0f      	.DB  0x8,0x8,0x8,0xF,0xF,0xF,0xF,0xF
00046f 0f0f
000470 0f0f
000471 0f0f
000472 0f0f      	.DB  0xF,0xF,0xF,0xF,0xF,0xF,0xF,0xF
000473 0f0f
000474 0f0f
000475 0f0f
000476 0f0f      	.DB  0xF,0xF,0xF,0xF,0xF,0xF,0xF,0xF
000477 0f0f
000478 0f0f
000479 0f0f
00047a 0f0f      	.DB  0xF,0xF,0xF,0xF,0xF,0xF,0xF,0xF
00047b 0f0f
00047c 0f0f
00047d 0f0f
00047e 0f0f      	.DB  0xF,0xF,0xF,0xF,0xF,0xF,0xF,0xF
00047f 0f0f
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1420): warning: .cseg .db misalignment - padding zero byte
000480 000f      	.DB  0xF,0xF,0xF
                 _a4:
000481 0000
000482 0000
000483 0000
000484 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000485 0000
000486 0000
000487 f0c0
000488 fcf8      	.DB  0x0,0x0,0x0,0x0,0xC0,0xF0,0xF8,0xFC
000489 fefc
00048a fefe
00048b fefe
00048c fefe      	.DB  0xFC,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFE
00048d fcfc
00048e f0f8
00048f 00c0
000490 0000      	.DB  0xFC,0xFC,0xF8,0xF0,0xC0,0x0,0x0,0x0
000491 0000
000492 0000
000493 0000
000494 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000495 0000
000496 0000
000497 0000
000498 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000499 0000
00049a 0000
00049b 6000
00049c c0e0      	.DB  0x0,0x0,0x0,0x0,0x0,0x60,0xE0,0xC0
00049d 0080
00049e c080
00049f 60e0
0004a0 e060      	.DB  0x80,0x0,0x80,0xC0,0xE0,0x60,0x60,0xE0
0004a1 0080
0004a2 8000
0004a3 60e0
0004a4 6060      	.DB  0x80,0x0,0x0,0x80,0xE0,0x60,0x60,0x60
0004a5 e060
0004a6 60e0
0004a7 6060
0004a8 6000      	.DB  0x60,0xE0,0xE0,0x60,0x60,0x60,0x0,0x60
0004a9 e060
0004aa 60e0
0004ab 0060
0004ac e000      	.DB  0x60,0xE0,0xE0,0x60,0x60,0x0,0x0,0xE0
0004ad 00e0
0004ae 0000
0004af e000
0004b0 00e0      	.DB  0xE0,0x0,0x0,0x0,0x0,0xE0,0xE0,0x0
0004b1 0000
0004b2 0000
0004b3 0000
0004b4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0004b5 0000
0004b6 0000
0004b7 0000
0004b8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0004b9 0000
0004ba 0000
0004bb 6060
0004bc e0e0      	.DB  0x0,0x0,0x0,0x0,0x60,0x60,0xE0,0xE0
0004bd 6060
0004be 6060
0004bf e0e0
0004c0 6060      	.DB  0x60,0x60,0x60,0x60,0xE0,0xE0,0x60,0x60
0004c1 e060
0004c2 0080
0004c3 8000
0004c4 60e0      	.DB  0x60,0xE0,0x80,0x0,0x0,0x80,0xE0,0x60
0004c5 e000
0004c6 08e4
0004c7 0808
0004c8 e488      	.DB  0x0,0xE0,0xE4,0x8,0x8,0x8,0x88,0xE4
0004c9 00e0
0004ca 0000
0004cb e0e0
0004cc 6060      	.DB  0xE0,0x0,0x0,0x0,0xE0,0xE0,0x60,0x60
0004cd e060
0004ce 00e0
0004cf 8000
0004d0 e0c0      	.DB  0x60,0xE0,0xE0,0x0,0x0,0x80,0xC0,0xE0
0004d1 6060
0004d2 e060
0004d3 80c0
0004d4 0000      	.DB  0x60,0x60,0x60,0xE0,0xC0,0x80,0x0,0x0
0004d5 0000
0004d6 0000
0004d7 e000
0004d8 00e0      	.DB  0x0,0x0,0x0,0x0,0x0,0xE0,0xE0,0x0
0004d9 0000
0004da 0000
0004db 0000
0004dc e0e0      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0xE0,0xE0
0004dd 0000
0004de 0000
0004df 0000
0004e0 e000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xE0
0004e1 00e0
0004e2 0000
0004e3 0000
0004e4 0000      	.DB  0xE0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0004e5 0000
0004e6 0000
0004e7 0000
0004e8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0004e9 0000
0004ea 0000
0004eb e080
0004ec 1870      	.DB  0x0,0x0,0x0,0x0,0x80,0xE0,0x70,0x18
0004ed c48c
0004ee c2c6
0004ef 0282
0004f0 c282      	.DB  0x8C,0xC4,0xC6,0xC2,0x82,0x2,0x82,0xC2
0004f1 c4c6
0004f2 98cc
0004f3 e070
0004f4 0080      	.DB  0xC6,0xC4,0xCC,0x98,0x70,0xE0,0x80,0x0
0004f5 0000
0004f6 0000
0004f7 0000
0004f8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0004f9 0000
0004fa 0000
0004fb 0000
0004fc 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0004fd 0000
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1453): warning: .cseg .db misalignment - padding zero byte
0004fe 0000      	.DB  0x0,0x0,0x0
                 _b4:
0004ff 0000
000500 0000
000501 0000
000502 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000503 0000
000504 0000
000505 1f07
000506 6139      	.DB  0x0,0x0,0x0,0x0,0x7,0x1F,0x39,0x61
000507 c3c1
000508 ff87
000509 bfff
00050a c387      	.DB  0xC1,0xC3,0x87,0xFF,0xFF,0xBF,0x87,0xC3
00050b 71c1
00050c 0f3d
00050d 0003
00050e 0000      	.DB  0xC1,0x71,0x3D,0xF,0x3,0x0,0x0,0x0
00050f 0000
000510 0000
000511 0000
000512 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000513 0000
000514 0000
000515 0000
000516 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000517 0000
000518 0000
000519 6000
00051a 3970      	.DB  0x0,0x0,0x0,0x0,0x0,0x60,0x70,0x39
00051b 0f1f
00051c 390f
00051d 6070
00051e 4000      	.DB  0x1F,0xF,0xF,0x39,0x70,0x60,0x0,0x40
00051f 6f43
000520 0f3c
000521 0003
000522 0000      	.DB  0x43,0x6F,0x3C,0xF,0x3,0x0,0x0,0x0
000523 7f00
000524 007f
000525 0000
000526 6000      	.DB  0x0,0x7F,0x7F,0x0,0x0,0x0,0x0,0x60
000527 7f60
000528 607f
000529 0060
00052a 7f00      	.DB  0x60,0x7F,0x7F,0x60,0x60,0x0,0x0,0x7F
00052b 067f
00052c 0606
00052d 7f06
00052e 007f      	.DB  0x7F,0x6,0x6,0x6,0x6,0x7F,0x7F,0x0
00052f 0000
000530 0000
000531 0000
000532 0c00      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xC
000533 0c0c
000534 0c0c
000535 0000
000536 0000      	.DB  0xC,0xC,0xC,0xC,0x0,0x0,0x0,0x0
000537 0000
000538 0000
000539 0000
00053a 7f7f      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x7F,0x7F
00053b 0000
00053c 0000
00053d 7f7f
00053e 0000      	.DB  0x0,0x0,0x0,0x0,0x7F,0x7F,0x0,0x0
00053f 4000
000540 6f43
000541 0f3c
000542 0003      	.DB  0x0,0x40,0x43,0x6F,0x3C,0xF,0x3,0x0
000543 7f00
000544 1c3f
000545 030e
000546 7f01      	.DB  0x0,0x7F,0x3F,0x1C,0xE,0x3,0x1,0x7F
000547 007f
000548 4040
000549 3f7f
00054a 0000      	.DB  0x7F,0x0,0x40,0x40,0x7F,0x3F,0x0,0x0
00054b 7f00
00054c 007f
00054d 3f1f
00054e 6071      	.DB  0x0,0x7F,0x7F,0x0,0x1F,0x3F,0x71,0x60
00054f 6060
000550 3870
000551 0f1f
000552 0000      	.DB  0x60,0x60,0x70,0x38,0x1F,0xF,0x0,0x0
000553 0000
000554 0000
000555 6f00
000556 006f      	.DB  0x0,0x0,0x0,0x0,0x0,0x6F,0x6F,0x0
000557 0000
000558 0000
000559 0000
00055a 6f6f      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x6F,0x6F
00055b 0000
00055c 0000
00055d 0000
00055e 6f00      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x6F
00055f 006f
000560 0000
000561 0000
000562 0000      	.DB  0x6F,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000563 0000
000564 0000
000565 0000
000566 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000567 0000
000568 0000
000569 7f1f
00056a 80e0      	.DB  0x0,0x0,0x0,0x0,0x1F,0x7F,0xE0,0x80
00056b 4743
00056c 87c5
00056d 8083
00056e 8783      	.DB  0x43,0x47,0xC5,0x87,0x83,0x80,0x83,0x87
00056f 47c7
000570 8347
000571 7fe0
000572 001f      	.DB  0xC7,0x47,0x47,0x83,0xE0,0x7F,0x1F,0x0
000573 0000
000574 0000
000575 0000
000576 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000577 0000
000578 0000
000579 0000
00057a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00057b 0000
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1486): warning: .cseg .db misalignment - padding zero byte
00057c 0000      	.DB  0x0,0x0,0x0
                 _c4:
00057d 0000
00057e 0000
00057f 0000
000580 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000581 0000
000582 0000
000583 0000
000584 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000585 0301
000586 0703
000587 0707
000588 0103      	.DB  0x1,0x3,0x3,0x7,0x7,0x7,0x3,0x1
000589 0000
00058a 0000
00058b 0000
00058c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00058d 0000
00058e 0000
00058f 0000
000590 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000591 0000
000592 0000
000593 0000
000594 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000595 0000
000596 0000
000597 0000
000598 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000599 0000
00059a 0000
00059b 0000
00059c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00059d 0000
00059e 0000
00059f 0000
0005a0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005a1 0000
0005a2 0000
0005a3 0000
0005a4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005a5 0000
0005a6 0000
0005a7 0000
0005a8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005a9 0000
0005aa 0000
0005ab 0000
0005ac 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005ad 0000
0005ae 0000
0005af 0000
0005b0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005b1 0000
0005b2 0000
0005b3 0000
0005b4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005b5 0000
0005b6 0000
0005b7 0000
0005b8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005b9 0000
0005ba 0000
0005bb 0000
0005bc 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005bd 0000
0005be 0000
0005bf 0000
0005c0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005c1 0000
0005c2 0000
0005c3 0000
0005c4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005c5 0000
0005c6 0000
0005c7 0000
0005c8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005c9 0000
0005ca 0000
0005cb 0000
0005cc 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005cd 0000
0005ce 0000
0005cf 0000
0005d0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005d1 0000
0005d2 0000
0005d3 0000
0005d4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005d5 0000
0005d6 0000
0005d7 0000
0005d8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005d9 0000
0005da 0000
0005db 0000
0005dc 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005dd 0000
0005de 0000
0005df 0000
0005e0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005e1 0000
0005e2 0000
0005e3 0000
0005e4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005e5 0000
0005e6 0000
0005e7 0000
0005e8 0100      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1
0005e9 0203
0005ea 0406
0005eb 0404
0005ec 0404      	.DB  0x3,0x2,0x6,0x4,0x4,0x4,0x4,0x4
0005ed 0206
0005ee 0103
0005ef 0000
0005f0 0000      	.DB  0x6,0x2,0x3,0x1,0x0,0x0,0x0,0x0
0005f1 0000
0005f2 0000
0005f3 0000
0005f4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005f5 0000
0005f6 0000
0005f7 0000
0005f8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005f9 0000
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1519): warning: .cseg .db misalignment - padding zero byte
0005fa 0000      	.DB  0x0,0x0,0x0
                 _a5:
0005fb 0000
0005fc 0000
0005fd 0000
0005fe 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0005ff 0000
000600 0000
000601 0000
000602 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000603 f0e0
000604 f0f0
000605 f0f0
000606 f0e0      	.DB  0xE0,0xF0,0xF0,0xF0,0xF0,0xF0,0xE0,0xF0
000607 f0f0
000608 f0f0
000609 00e0
00060a 0000      	.DB  0xF0,0xF0,0xF0,0xF0,0xE0,0x0,0x0,0x0
00060b 0000
00060c 0000
00060d 0000
00060e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00060f 0000
000610 0000
000611 0000
000612 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000613 0000
000614 e000
000615 00e0
000616 e0c0      	.DB  0x0,0x0,0x0,0xE0,0xE0,0x0,0xC0,0xE0
000617 2060
000618 c000
000619 e0e0
00061a 6060      	.DB  0x60,0x20,0x0,0xC0,0xE0,0xE0,0x60,0x60
00061b e0e0
00061c 00c0
00061d 6020
00061e c0e0      	.DB  0xE0,0xE0,0xC0,0x0,0x20,0x60,0xE0,0xC0
00061f c080
000620 60e0
000621 0020
000622 c000      	.DB  0x80,0xC0,0xE0,0x60,0x20,0x0,0x0,0xC0
000623 e0e0
000624 c0e0
000625 0000
000626 e000      	.DB  0xE0,0xE0,0xE0,0xC0,0x0,0x0,0x0,0xE0
000627 00e0
000628 e0c0
000629 20e0
00062a e060      	.DB  0xE0,0x0,0xC0,0xE0,0xE0,0x20,0x60,0xE0
00062b c0e0
00062c 0000
00062d 0000
00062e 0000      	.DB  0xE0,0xC0,0x0,0x0,0x0,0x0,0x0,0x0
00062f c080
000630 60e0
000631 6020
000632 4060      	.DB  0x80,0xC0,0xE0,0x60,0x20,0x60,0x60,0x40
000633 e000
000634 20e0
000635 6020
000636 e0e0      	.DB  0x0,0xE0,0xE0,0x20,0x20,0x60,0xE0,0xE0
000637 0000
000638 e0c0
000639 60e0
00063a e060      	.DB  0x0,0x0,0xC0,0xE0,0xE0,0x60,0x60,0xE0
00063b c0e0
00063c 0000
00063d e0e0
00063e c000      	.DB  0xE0,0xC0,0x0,0x0,0xE0,0xE0,0x0,0xC0
00063f e0e0
000640 6020
000641 e0e0
000642 00c0      	.DB  0xE0,0xE0,0x20,0x60,0xE0,0xE0,0xC0,0x0
000643 0000
000644 0000
000645 e000
000646 20e0      	.DB  0x0,0x0,0x0,0x0,0x0,0xE0,0xE0,0x20
000647 2020
000648 0020
000649 e020
00064a c0e0      	.DB  0x20,0x20,0x20,0x0,0x20,0xE0,0xE0,0xC0
00064b 0000
00064c e0c0
00064d 20e0
00064e e0e0      	.DB  0x0,0x0,0xC0,0xE0,0xE0,0x20,0xE0,0xE0
00064f 2020
000650 2020
000651 2000
000652 e0e0      	.DB  0x20,0x20,0x20,0x20,0x0,0x20,0xE0,0xE0
000653 00c0
000654 c000
000655 e0e0
000656 e020      	.DB  0xC0,0x0,0x0,0xC0,0xE0,0xE0,0x20,0xE0
000657 00e0
000658 e0c0
000659 2060
00065a e0e0      	.DB  0xE0,0x0,0xC0,0xE0,0x60,0x20,0xE0,0xE0
00065b 00c0
00065c c000
00065d e0e0
00065e 0020      	.DB  0xC0,0x0,0x0,0xC0,0xE0,0xE0,0x20,0x0
00065f 0000
000660 0000
000661 0000
000662 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000663 0000
000664 0000
000665 0000
000666 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000667 0000
000668 f0e0
000669 f0f0
00066a f0f0      	.DB  0x0,0x0,0xE0,0xF0,0xF0,0xF0,0xF0,0xF0
00066b f0e0
00066c f0f0
00066d f0f0
00066e 00e0      	.DB  0xE0,0xF0,0xF0,0xF0,0xF0,0xF0,0xE0,0x0
00066f 0000
000670 0000
000671 0000
000672 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000673 0000
000674 0000
000675 0000
000676 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000677 0000
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1552): warning: .cseg .db misalignment - padding zero byte
000678 0000      	.DB  0x0,0x0,0x0
                 _b5:
000679 0000
00067a 0000
00067b 0000
00067c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00067d 0000
00067e 0000
00067f 0000
000680 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000681 0301
000682 1f07
000683 ffff
000684 3f7f      	.DB  0x1,0x3,0x7,0x1F,0xFF,0xFF,0x7F,0x3F
000685 1f3f
000686 070f
000687 0001
000688 0000      	.DB  0x3F,0x1F,0xF,0x7,0x1,0x0,0x0,0x0
000689 0000
00068a 0000
00068b 0000
00068c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00068d 0000
00068e 0000
00068f 0000
000690 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000691 0000
000692 7f00
000693 077f
000694 7f1f      	.DB  0x0,0x0,0x0,0x7F,0x7F,0x7,0x1F,0x7F
000695 6078
000696 3f00
000697 707f
000698 6060      	.DB  0x78,0x60,0x0,0x3F,0x7F,0x70,0x60,0x60
000699 7f70
00069a 003f
00069b 6040
00069c 3f79      	.DB  0x70,0x7F,0x3F,0x0,0x40,0x60,0x79,0x3F
00069d 3f1f
00069e 6079
00069f 7040
0006a0 7f7e      	.DB  0x1F,0x3F,0x79,0x60,0x40,0x70,0x7E,0x7F
0006a1 111f
0006a2 7f17
0006a3 707e
0006a4 7f00      	.DB  0x1F,0x11,0x17,0x7F,0x7E,0x70,0x0,0x7F
0006a5 027f
0006a6 7f3f
0006a7 6070
0006a8 7040      	.DB  0x7F,0x2,0x3F,0x7F,0x70,0x60,0x40,0x70
0006a9 3f7f
0006aa 0000
0006ab 0000
0006ac 0000      	.DB  0x7F,0x3F,0x0,0x0,0x0,0x0,0x0,0x0
0006ad 3f1f
0006ae 6070
0006af 6040
0006b0 2060      	.DB  0x1F,0x3F,0x70,0x60,0x40,0x60,0x60,0x20
0006b1 7f00
0006b2 427f
0006b3 6742
0006b4 3f7f      	.DB  0x0,0x7F,0x7F,0x42,0x42,0x67,0x7F,0x3F
0006b5 0000
0006b6 7f3f
0006b7 6070
0006b8 7060      	.DB  0x0,0x0,0x3F,0x7F,0x70,0x60,0x60,0x70
0006b9 3f7f
0006ba 0000
0006bb 7f7f
0006bc 3f02      	.DB  0x7F,0x3F,0x0,0x0,0x7F,0x7F,0x2,0x3F
0006bd 707f
0006be 4060
0006bf 7f70
0006c0 003f      	.DB  0x7F,0x70,0x60,0x40,0x70,0x7F,0x3F,0x0
0006c1 0000
0006c2 0000
0006c3 7f00
0006c4 427f      	.DB  0x0,0x0,0x0,0x0,0x0,0x7F,0x7F,0x42
0006c5 6642
0006c6 3c7e
0006c7 0000
0006c8 6f43      	.DB  0x42,0x66,0x7E,0x3C,0x0,0x0,0x43,0x6F
0006c9 3e7f
0006ca 071f
0006cb 0000
0006cc 7f7f      	.DB  0x7F,0x3E,0x1F,0x7,0x0,0x0,0x7F,0x7F
0006cd 4242
0006ce 7e66
0006cf 003c
0006d0 4300      	.DB  0x42,0x42,0x66,0x7E,0x3C,0x0,0x0,0x43
0006d1 7f6f
0006d2 1f3e
0006d3 0007
0006d4 7f00      	.DB  0x6F,0x7F,0x3E,0x1F,0x7,0x0,0x0,0x7F
0006d5 077f
0006d6 7f1f
0006d7 6078
0006d8 4300      	.DB  0x7F,0x7,0x1F,0x7F,0x78,0x60,0x0,0x43
0006d9 7f6f
0006da 1f3e
0006db 0007
0006dc 0000      	.DB  0x6F,0x7F,0x3E,0x1F,0x7,0x0,0x0,0x0
0006dd 0000
0006de 0000
0006df 0000
0006e0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0006e1 0000
0006e2 0000
0006e3 0000
0006e4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0006e5 0000
0006e6 0301
0006e7 1f07
0006e8 ffff      	.DB  0x0,0x0,0x1,0x3,0x7,0x1F,0xFF,0xFF
0006e9 3f7f
0006ea 1f3f
0006eb 070f
0006ec 0001      	.DB  0x7F,0x3F,0x3F,0x1F,0xF,0x7,0x1,0x0
0006ed 0000
0006ee 0000
0006ef 0000
0006f0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0006f1 0000
0006f2 0000
0006f3 0000
0006f4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0006f5 0000
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1585): warning: .cseg .db misalignment - padding zero byte
0006f6 0000      	.DB  0x0,0x0,0x0
                 _c5:
0006f7 0000
0006f8 0000
0006f9 0000
0006fa 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0006fb 0000
0006fc 0000
0006fd 0000
0006fe 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0006ff 0000
000700 0000
000701 0000
000702 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000703 0000
000704 0000
000705 0000
000706 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000707 0000
000708 0000
000709 0000
00070a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00070b 0000
00070c 0000
00070d 0000
00070e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00070f 0000
000710 0000
000711 0000
000712 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000713 0000
000714 0000
000715 0000
000716 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000717 0000
000718 0000
000719 0000
00071a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00071b 0000
00071c 0000
00071d 0000
00071e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00071f 0000
000720 0000
000721 0000
000722 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000723 0000
000724 0000
000725 0000
000726 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000727 0000
000728 0000
000729 0000
00072a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00072b 0000
00072c 0000
00072d 0000
00072e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00072f 0000
000730 0000
000731 0000
000732 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000733 0000
000734 0000
000735 0000
000736 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000737 0000
000738 0000
000739 0000
00073a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00073b 0000
00073c 0000
00073d 0000
00073e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00073f 0000
000740 0000
000741 0000
000742 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000743 0000
000744 0000
000745 0000
000746 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000747 0000
000748 0000
000749 0000
00074a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00074b 0000
00074c 0000
00074d 0000
00074e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00074f 0000
000750 0000
000751 0000
000752 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000753 0000
000754 0000
000755 0000
000756 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000757 0000
000758 0000
000759 0000
00075a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00075b 0000
00075c 0000
00075d 0000
00075e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00075f 0000
000760 0000
000761 0000
000762 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000763 0000
000764 0000
000765 0000
000766 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000767 0000
000768 0000
000769 0000
00076a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00076b 0000
00076c 0000
00076d 0000
00076e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00076f 0000
000770 0000
000771 0000
000772 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000773 0000
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1618): warning: .cseg .db misalignment - padding zero byte
000774 0000      	.DB  0x0,0x0,0x0
                 _a6:
000775 0000
000776 0000
000777 0000
000778 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000779 0000
00077a 0000
00077b 0000
00077c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00077d 0000
00077e 0000
00077f 0000
000780 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000781 c080
000782 1020
000783 8898
000784 0808      	.DB  0x80,0xC0,0x20,0x10,0x98,0x88,0x8,0x8
000785 9888
000786 2010
000787 80c0
000788 0000      	.DB  0x88,0x98,0x10,0x20,0xC0,0x80,0x0,0x0
000789 0000
00078a 0000
00078b 0000
00078c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00078d 0000
00078e 0000
00078f 0000
000790 7808      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x8,0x78
000791 c0e0
000792 0000
000793 0000
000794 0000      	.DB  0xE0,0xC0,0x0,0x0,0x0,0x0,0x0,0x0
000795 0000
000796 0000
000797 0000
000798 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000799 8000
00079a a040
00079b 8890
00079c 0808      	.DB  0x0,0x80,0x40,0xA0,0x90,0x88,0x8,0x8
00079d 0808
00079e 1018
00079f c020
0007a0 0080      	.DB  0x8,0x8,0x18,0x10,0x20,0xC0,0x80,0x0
0007a1 0000
0007a2 0000
0007a3 0000
0007a4 c000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xC0
0007a5 2020
0007a6 4830
0007a7 8808
0007a8 4808      	.DB  0x20,0x20,0x30,0x48,0x8,0x88,0x8,0x48
0007a9 2030
0007aa c020
0007ab 0000
0007ac 0000      	.DB  0x30,0x20,0x20,0xC0,0x0,0x0,0x0,0x0
0007ad 0000
0007ae 0000
0007af 0000
0007b0 c080      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x80,0xC0
0007b1 2040
0007b2 e030
0007b3 40c0
0007b4 3020      	.DB  0x40,0x20,0x30,0xE0,0xC0,0x40,0x20,0x30
0007b5 c060
0007b6 2040
0007b7 7020
0007b8 00c0      	.DB  0x60,0xC0,0x40,0x20,0x20,0x70,0xC0,0x0
0007b9 0000
0007ba 0000
0007bb 0000
0007bc c000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xC0
0007bd 1030
0007be 1818
0007bf cc28
0007c0 0c0c      	.DB  0x30,0x10,0x18,0x18,0x28,0xCC,0xC,0xC
0007c1 0c0c
0007c2 0c0c
0007c3 988c
0007c4 1098      	.DB  0xC,0xC,0xC,0xC,0x8C,0x98,0x98,0x10
0007c5 0010
0007c6 0000
0007c7 0000
0007c8 0000      	.DB  0x10,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0007c9 8000
0007ca 8cf8
0007cb 601c
0007cc 0080      	.DB  0x0,0x80,0xF8,0x8C,0x1C,0x60,0x80,0x0
0007cd 0000
0007ce 0000
0007cf 0000
0007d0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0007d1 0000
0007d2 f000
0007d3 f000
0007d4 e000      	.DB  0x0,0x0,0x0,0xF0,0x0,0xF0,0x0,0xE0
0007d5 00e0
0007d6 00f0
0007d7 00f0
0007d8 0000      	.DB  0xE0,0x0,0xF0,0x0,0xF0,0x0,0x0,0x0
0007d9 0000
0007da 0000
0007db 0000
0007dc 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0007dd 0000
0007de 0000
0007df 0000
0007e0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0007e1 0000
0007e2 0000
0007e3 0000
0007e4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0007e5 0000
0007e6 0000
0007e7 0000
0007e8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0007e9 0000
0007ea 0000
0007eb 0000
0007ec 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0007ed 0000
0007ee 0000
0007ef 0000
0007f0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0007f1 0000
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1651): warning: .cseg .db misalignment - padding zero byte
0007f2 0000      	.DB  0x0,0x0,0x0
                 _b6:
0007f3 0000
0007f4 0000
0007f5 0000
0007f6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0007f7 0000
0007f8 0000
0007f9 0000
0007fa 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0007fb 0000
0007fc 0000
0007fd 0000
0007fe 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0007ff 301f
000800 8c40
000801 2191
000802 2020      	.DB  0x1F,0x30,0x40,0x8C,0x91,0x21,0x20,0x20
000803 9121
000804 408c
000805 1f30
000806 0000      	.DB  0x21,0x91,0x8C,0x40,0x30,0x1F,0x0,0x0
000807 0000
000808 0000
000809 0000
00080a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00080b 0900
00080c 0206
00080d 0606
00080e e606      	.DB  0x0,0x9,0x6,0x2,0x6,0x6,0x6,0xE6
00080f 3f7f
000810 060f
000811 0606
000812 0000      	.DB  0x7F,0x3F,0xF,0x6,0x6,0x6,0x0,0x0
000813 0000
000814 0000
000815 0000
000816 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000817 1f00
000818 7f3f
000819 f9f9
00081a feff      	.DB  0x0,0x1F,0x3F,0x7F,0xF9,0xF9,0xFF,0xFE
00081b e0f0
00081c e6e6
00081d 3060
00081e 001f      	.DB  0xF0,0xE0,0xE6,0xE6,0x60,0x30,0x1F,0x0
00081f 0000
000820 0000
000821 0000
000822 1d03      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x3,0x1D
000823 2428
000824 8740
000825 7a85
000826 8087      	.DB  0x28,0x24,0x40,0x87,0x85,0x7A,0x87,0x80
000827 24c4
000828 3c24
000829 0003
00082a 0000      	.DB  0xC4,0x24,0x24,0x3C,0x3,0x0,0x0,0x0
00082b 0000
00082c 0000
00082d 0000
00082e 2040      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x40,0x20
00082f 1030
000830 3018
000831 2060
000832 1810      	.DB  0x30,0x10,0x18,0x30,0x60,0x20,0x10,0x18
000833 6038
000834 1020
000835 3818
000836 0060      	.DB  0x38,0x60,0x20,0x10,0x18,0x38,0x60,0x0
000837 0000
000838 0000
000839 0000
00083a 2100      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x21
00083b 6422
00083c c464
00083d c1c2
00083e c0c0      	.DB  0x22,0x64,0x64,0xC4,0xC2,0xC1,0xC0,0xC0
00083f c0c0
000840 51ce
000841 6060
000842 3120      	.DB  0xC0,0xC0,0xCE,0x51,0x60,0x60,0x20,0x31
000843 000e
000844 0000
000845 0000
000846 0000      	.DB  0xE,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000847 340f
000848 7474
000849 705c
00084a 1120      	.DB  0xF,0x34,0x74,0x74,0x5C,0x70,0x20,0x11
00084b 0e11
00084c 0000
00084d 0000
00084e 0000      	.DB  0x11,0xE,0x0,0x0,0x0,0x0,0x0,0x0
00084f 0000
000850 057c
000851 037f
000852 3f1f      	.DB  0x0,0x0,0x7C,0x5,0x7F,0x3,0x1F,0x3F
000853 1f3f
000854 7f03
000855 7c05
000856 0000      	.DB  0x3F,0x1F,0x3,0x7F,0x5,0x7C,0x0,0x0
000857 0000
000858 0000
000859 0000
00085a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00085b 0000
00085c 0000
00085d 0000
00085e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00085f 0000
000860 0000
000861 0000
000862 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000863 0000
000864 0000
000865 0000
000866 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000867 0000
000868 0000
000869 0000
00086a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00086b 0000
00086c 0000
00086d 0000
00086e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00086f 0000
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1684): warning: .cseg .db misalignment - padding zero byte
000870 0000      	.DB  0x0,0x0,0x0
                 _c6:
000871 0000
000872 0000
000873 0000
000874 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000875 0000
000876 0000
000877 0000
000878 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000879 0000
00087a 0000
00087b 0000
00087c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00087d 0000
00087e 0000
00087f 0101
000880 0101      	.DB  0x0,0x0,0x0,0x0,0x1,0x1,0x1,0x1
000881 0101
000882 0000
000883 0000
000884 0000      	.DB  0x1,0x1,0x0,0x0,0x0,0x0,0x0,0x0
000885 0000
000886 0000
000887 0000
000888 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000889 0000
00088a 0000
00088b 0000
00088c 0101      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x1
00088d 0000
00088e 0000
00088f 0000
000890 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000891 0000
000892 0000
000893 0000
000894 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000895 0000
000896 0000
000897 0100
000898 0101      	.DB  0x0,0x0,0x0,0x0,0x0,0x1,0x1,0x1
000899 0101
00089a 0001
00089b 0000
00089c 0000      	.DB  0x1,0x1,0x1,0x0,0x0,0x0,0x0,0x0
00089d 0000
00089e 0000
00089f 0000
0008a0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008a1 0000
0008a2 0000
0008a3 0000
0008a4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008a5 0000
0008a6 0000
0008a7 0000
0008a8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008a9 0000
0008aa 0000
0008ab 0000
0008ac 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008ad 0000
0008ae 0000
0008af 0000
0008b0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008b1 0000
0008b2 0000
0008b3 0000
0008b4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008b5 0000
0008b6 0000
0008b7 0000
0008b8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008b9 0000
0008ba 0000
0008bb 0000
0008bc 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008bd 0000
0008be 0000
0008bf 0000
0008c0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008c1 0000
0008c2 0000
0008c3 0000
0008c4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008c5 0000
0008c6 0000
0008c7 0000
0008c8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008c9 0000
0008ca 0000
0008cb 0000
0008cc 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008cd 0000
0008ce 0000
0008cf 0000
0008d0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008d1 0000
0008d2 0000
0008d3 0000
0008d4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008d5 0000
0008d6 0000
0008d7 0000
0008d8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008d9 0000
0008da 0000
0008db 0000
0008dc 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008dd 0000
0008de 0000
0008df 0000
0008e0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008e1 0000
0008e2 0000
0008e3 0000
0008e4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008e5 0000
0008e6 0000
0008e7 0000
0008e8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008e9 0000
0008ea 0000
0008eb 0000
0008ec 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0008ed 0000
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1717): warning: .cseg .db misalignment - padding zero byte
0008ee 0000      	.DB  0x0,0x0,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
0008ef 0100
0008f0 0000      	.DB  0x0,0x1,0x0,0x0
                 
                 _0x3:
0008f1 0169      	.DB  0x69,0x1
                 _0x4:
F:\LnKOx\Work\LnKOx\Microcontroler\POV - Біжучий рядок\avr\List\pov.asm(1726): warning: .cseg .db misalignment - padding zero byte
0008f2 00fa      	.DB  0xFA
                 
                 __GLOBAL_INI_TBL:
0008f3 0004      	.DW  0x04
0008f4 0004      	.DW  0x04
0008f5 11de      	.DW  __REG_VARS*2
                 
0008f6 0002      	.DW  0x02
0008f7 0168      	.DW  _cnt_line
0008f8 11e2      	.DW  _0x3*2
                 
0008f9 0001      	.DW  0x01
0008fa 016c      	.DW  _max_line
0008fb 11e4      	.DW  _0x4*2
                 
                 _0xFFFFFFFF:
0008fc 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0008fd 94f8      	CLI
0008fe 27ee      	CLR  R30
0008ff bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000900 e0f1      	LDI  R31,1
000901 bffb      	OUT  GICR,R31
000902 bfeb      	OUT  GICR,R30
000903 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000904 e1f8      	LDI  R31,0x18
000905 bdf1      	OUT  WDTCR,R31
000906 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000907 e08d      	LDI  R24,(14-2)+1
000908 e0a2      	LDI  R26,2
000909 27bb      	CLR  R27
                 __CLEAR_REG:
00090a 93ed      	ST   X+,R30
00090b 958a      	DEC  R24
00090c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00090d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00090e e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00090f e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000910 93ed      	ST   X+,R30
000911 9701      	SBIW R24,1
000912 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000913 eee6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000914 e1f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000915 9185      	LPM  R24,Z+
000916 9195      	LPM  R25,Z+
000917 9700      	SBIW R24,0
000918 f061      	BREQ __GLOBAL_INI_END
000919 91a5      	LPM  R26,Z+
00091a 91b5      	LPM  R27,Z+
00091b 9005      	LPM  R0,Z+
00091c 9015      	LPM  R1,Z+
00091d 01bf      	MOVW R22,R30
00091e 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00091f 9005      	LPM  R0,Z+
000920 920d      	ST   X+,R0
000921 9701      	SBIW R24,1
000922 f7e1      	BRNE __GLOBAL_INI_LOOP
000923 01fb      	MOVW R30,R22
000924 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000925 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000926 bfed      	OUT  SPL,R30
000927 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000928 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000929 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00092a e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00092b c129      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*****************************************************
                 ;This program was produced by the
                 ;CodeWizardAVR V2.05.0 Professional
                 ;Automatic Program Generator
                 ;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 ;
                 ;Project :
                 ;Version :
                 ;Date    : 29.04.2014
                 ;Author  :
                 ;Company :
                 ;Comments:
                 ;
                 ;
                 ;Chip type               : ATmega8
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8,000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*****************************************************/
                 ;flash char a[]={0,1,1,1,129,193,97,33,33,33,97,65,1,225,225,33,33,33,225,225,1,1,1,129,225,97,225,129,1,1,1,225,225,33,3 ...
                 ;flash char b[]={0,0,0,0,31,63,96,64,64,64,96,32,64,127,63,0,0,0,127,127,0,96,124,31,19,16,19,31,124,96,0,127,127,66,66,6 ...
                 ;flash char c[]={0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8, ...
                 ;
                 ;flash char a2[]={0,1,1,1,1,1,1,1,1,1,1,193,193,97,97,225,225,1,1,225,225,97,97,97,225,225,1,1,1,1,1,129,193,225,1,1,1,1, ...
                 ;flash char b2[]={0,0,0,0,0,0,0,0,0,30,63,99,96,96,96,48,48,64,64,127,63,0,0,0,127,127,0,0,96,120,30,15,13,15,127,96,0,0, ...
                 ;flash char c2[]={0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8 ...
                 ;
                 ;flash char a3[]={0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,2 ...
                 ;flash char b3[]={0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,2 ...
                 ;flash char c3[]={0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15 ...
                 ;
                 ;
                 ;flash char a4[]={0,0,0,0,0,0,0,0,0,0,0,0,192,240,248,252,252,254,254,254,254,254,254,254,252,252,248,240,192,0,0,0,0,0,0 ...
                 ;flash char b4[]={0,0,0,0,0,0,0,0,0,0,0,0,7,31,57,97,193,195,135,255,255,191,135,195,193,113,61,15,3,0,0,0,0,0,0,0,0,0,0, ...
                 ;flash char c4[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,7,7,7,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ...
                 ;
                 ;flash char a5[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,240,240,240,240,240,224,240,240,240,240,240,224,0,0,0,0,0,0,0,0,0,0 ...
                 ;flash char b5[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,7,31,255,255,127,63,63,31,15,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, ...
                 ;flash char c5[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ...
                 ;
                 ;
                 ;flash char a6[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,192,32,16,152,136,8,8,136,152,16,32,192,128,0,0,0,0 ...
                 ;flash char b6[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,48,64,140,145,33,32,32,33,145,140,64,48,31,0,0,0,0,0 ...
                 ;flash char c6[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ...
                 ;
                 ;
                 ;
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ; #include <delay.h>
                 ; #include <sleep.h>
                 ;char n_pic=1;
                 ;int zdvug=0;
                 ;char ready=0;
                 ;int tmr_int;
                 ;int vzdvug;
                 ;int old_int;
                 ;int dif_int;
                 ;int tmr_int2;
                 ;int tmr_line;
                 ;int curent_line;
                 ;int cnt_line=361;
                 
                 	.DSEG
                 ;int tmr_to_sleep=0;
                 ;int max_line=250;
                 ;void set_led_state(char a,char b,char c)
                 ; 0000 0044 {
                 
                 	.CSEG
                 _set_led_state:
                 ; .FSTART _set_led_state
                 ; 0000 0045     PORTC.5=!(a & 0B00000001);// 1
00092c 93aa      	ST   -Y,R26
                 ;	a -> Y+2
                 ;	b -> Y+1
                 ;	c -> Y+0
00092d 81ea      	LDD  R30,Y+2
00092e 70e1      	ANDI R30,LOW(0x1)
00092f f011      	BREQ _0x5
000930 98ad      	CBI  0x15,5
000931 c001      	RJMP _0x6
                 _0x5:
000932 9aad      	SBI  0x15,5
                 _0x6:
                 ; 0000 0046     PORTC.4=!(a & 0B00000010);// 2
000933 81ea      	LDD  R30,Y+2
000934 70e2      	ANDI R30,LOW(0x2)
000935 f011      	BREQ _0x7
000936 98ac      	CBI  0x15,4
000937 c001      	RJMP _0x8
                 _0x7:
000938 9aac      	SBI  0x15,4
                 _0x8:
                 ; 0000 0047     PORTC.3=!(a & 0B00000100);// 3
000939 81ea      	LDD  R30,Y+2
00093a 70e4      	ANDI R30,LOW(0x4)
00093b f011      	BREQ _0x9
00093c 98ab      	CBI  0x15,3
00093d c001      	RJMP _0xA
                 _0x9:
00093e 9aab      	SBI  0x15,3
                 _0xA:
                 ; 0000 0048     PORTC.2=!(a & 0B00001000);// 4
00093f 81ea      	LDD  R30,Y+2
000940 70e8      	ANDI R30,LOW(0x8)
000941 f011      	BREQ _0xB
000942 98aa      	CBI  0x15,2
000943 c001      	RJMP _0xC
                 _0xB:
000944 9aaa      	SBI  0x15,2
                 _0xC:
                 ; 0000 0049     PORTC.1=!(a & 0B00010000);// 5
000945 81ea      	LDD  R30,Y+2
000946 71e0      	ANDI R30,LOW(0x10)
000947 f011      	BREQ _0xD
000948 98a9      	CBI  0x15,1
000949 c001      	RJMP _0xE
                 _0xD:
00094a 9aa9      	SBI  0x15,1
                 _0xE:
                 ; 0000 004A     PORTC.0=!(a & 0B00100000);// 6
00094b 81ea      	LDD  R30,Y+2
00094c 72e0      	ANDI R30,LOW(0x20)
00094d f011      	BREQ _0xF
00094e 98a8      	CBI  0x15,0
00094f c001      	RJMP _0x10
                 _0xF:
000950 9aa8      	SBI  0x15,0
                 _0x10:
                 ; 0000 004B     PORTB.2=!(a & 0B01000000);// 7
000951 81ea      	LDD  R30,Y+2
000952 74e0      	ANDI R30,LOW(0x40)
000953 f011      	BREQ _0x11
000954 98c2      	CBI  0x18,2
000955 c001      	RJMP _0x12
                 _0x11:
000956 9ac2      	SBI  0x18,2
                 _0x12:
                 ; 0000 004C     PORTB.1=!(a & 0B10000000);// 8
000957 81ea      	LDD  R30,Y+2
000958 78e0      	ANDI R30,LOW(0x80)
000959 f011      	BREQ _0x13
00095a 98c1      	CBI  0x18,1
00095b c001      	RJMP _0x14
                 _0x13:
00095c 9ac1      	SBI  0x18,1
                 _0x14:
                 ; 0000 004D     PORTB.3=!(b & 0B00000001);// 9
00095d 81e9      	LDD  R30,Y+1
00095e 70e1      	ANDI R30,LOW(0x1)
00095f f011      	BREQ _0x15
000960 98c3      	CBI  0x18,3
000961 c001      	RJMP _0x16
                 _0x15:
000962 9ac3      	SBI  0x18,3
                 _0x16:
                 ; 0000 004E     PORTB.4=!(b & 0B00000010);// 10
000963 81e9      	LDD  R30,Y+1
000964 70e2      	ANDI R30,LOW(0x2)
000965 f011      	BREQ _0x17
000966 98c4      	CBI  0x18,4
000967 c001      	RJMP _0x18
                 _0x17:
000968 9ac4      	SBI  0x18,4
                 _0x18:
                 ; 0000 004F     PORTB.5=!(b & 0B00000100);// 11
000969 81e9      	LDD  R30,Y+1
00096a 70e4      	ANDI R30,LOW(0x4)
00096b f011      	BREQ _0x19
00096c 98c5      	CBI  0x18,5
00096d c001      	RJMP _0x1A
                 _0x19:
00096e 9ac5      	SBI  0x18,5
                 _0x1A:
                 ; 0000 0050     PORTB.0=!(b & 0B00001000);// 12
00096f 81e9      	LDD  R30,Y+1
000970 70e8      	ANDI R30,LOW(0x8)
000971 f011      	BREQ _0x1B
000972 98c0      	CBI  0x18,0
000973 c001      	RJMP _0x1C
                 _0x1B:
000974 9ac0      	SBI  0x18,0
                 _0x1C:
                 ; 0000 0051     PORTD.7=!(b & 0B00010000);// 13
000975 81e9      	LDD  R30,Y+1
000976 71e0      	ANDI R30,LOW(0x10)
000977 f011      	BREQ _0x1D
000978 9897      	CBI  0x12,7
000979 c001      	RJMP _0x1E
                 _0x1D:
00097a 9a97      	SBI  0x12,7
                 _0x1E:
                 ; 0000 0052     PORTD.6=!(b & 0B00100000);// 14
00097b 81e9      	LDD  R30,Y+1
00097c 72e0      	ANDI R30,LOW(0x20)
00097d f011      	BREQ _0x1F
00097e 9896      	CBI  0x12,6
00097f c001      	RJMP _0x20
                 _0x1F:
000980 9a96      	SBI  0x12,6
                 _0x20:
                 ; 0000 0053     PORTD.5=!(b & 0B01000000);// 15
000981 81e9      	LDD  R30,Y+1
000982 74e0      	ANDI R30,LOW(0x40)
000983 f011      	BREQ _0x21
000984 9895      	CBI  0x12,5
000985 c001      	RJMP _0x22
                 _0x21:
000986 9a95      	SBI  0x12,5
                 _0x22:
                 ; 0000 0054     PORTB.7=!(b & 0B10000000);// 16
000987 81e9      	LDD  R30,Y+1
000988 78e0      	ANDI R30,LOW(0x80)
000989 f011      	BREQ _0x23
00098a 98c7      	CBI  0x18,7
00098b c001      	RJMP _0x24
                 _0x23:
00098c 9ac7      	SBI  0x18,7
                 _0x24:
                 ; 0000 0055     PORTB.6=!(c & 0B00000001);// 17
00098d 81e8      	LD   R30,Y
00098e 70e1      	ANDI R30,LOW(0x1)
00098f f011      	BREQ _0x25
000990 98c6      	CBI  0x18,6
000991 c001      	RJMP _0x26
                 _0x25:
000992 9ac6      	SBI  0x18,6
                 _0x26:
                 ; 0000 0056     PORTD.4=!(c & 0B00000010);// 18
000993 81e8      	LD   R30,Y
000994 70e2      	ANDI R30,LOW(0x2)
000995 f011      	BREQ _0x27
000996 9894      	CBI  0x12,4
000997 c001      	RJMP _0x28
                 _0x27:
000998 9a94      	SBI  0x12,4
                 _0x28:
                 ; 0000 0057     PORTD.1=!(c & 0B00000100);// 19
000999 81e8      	LD   R30,Y
00099a 70e4      	ANDI R30,LOW(0x4)
00099b f011      	BREQ _0x29
00099c 9891      	CBI  0x12,1
00099d c001      	RJMP _0x2A
                 _0x29:
00099e 9a91      	SBI  0x12,1
                 _0x2A:
                 ; 0000 0058     PORTD.0=!(c & 0B00001000);// 20
00099f 81e8      	LD   R30,Y
0009a0 70e8      	ANDI R30,LOW(0x8)
0009a1 f011      	BREQ _0x2B
0009a2 9890      	CBI  0x12,0
0009a3 c001      	RJMP _0x2C
                 _0x2B:
0009a4 9a90      	SBI  0x12,0
                 _0x2C:
                 ; 0000 0059 
                 ; 0000 005A }
0009a5 9623      	ADIW R28,3
0009a6 9508      	RET
                 ; .FEND
                 ;// External Interrupt 0 service routine
                 ;interrupt [EXT_INT0] void ext_int0_isr(void)
                 ; 0000 005D {
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
0009a7 d173      	RCALL SUBOPT_0x0
                 ; 0000 005E sleep_disable();
0009a8 d165      	RCALL _sleep_disable
                 ; 0000 005F MCUCR=0x00;
0009a9 e0e0      	LDI  R30,LOW(0)
0009aa bfe5      	OUT  0x35,R30
                 ; 0000 0060 
                 ; 0000 0061 
                 ; 0000 0062     tmr_int2 = TCNT1L | TCNT1H << 8;
0009ab d17d      	RCALL SUBOPT_0x1
0009ac 93e0 0162 	STS  _tmr_int2,R30
0009ae 93f0 0163 	STS  _tmr_int2+1,R31
                 ; 0000 0063     TCNT1H=0x00;
0009b0 d17f      	RCALL SUBOPT_0x2
                 ; 0000 0064     TCNT1L=0x00;
                 ; 0000 0065    PORTB=255;
0009b1 d182      	RCALL SUBOPT_0x3
                 ; 0000 0066    PORTC=255;
                 ; 0000 0067    PORTD=255;
                 ; 0000 0068    ready=0;
0009b2 2444      	CLR  R4
                 ; 0000 0069     if (tmr_int2>1000)
0009b3 91a0 0162 	LDS  R26,_tmr_int2
0009b5 91b0 0163 	LDS  R27,_tmr_int2+1
0009b7 3ea9      	CPI  R26,LOW(0x3E9)
0009b8 e0e3      	LDI  R30,HIGH(0x3E9)
0009b9 07be      	CPC  R27,R30
0009ba f40c      	BRGE PC+2
0009bb c041      	RJMP _0x2D
                 ; 0000 006A     {
                 ; 0000 006B         dif_int=tmr_int2-old_int;
0009bc d17c      	RCALL SUBOPT_0x4
0009bd 19ec      	SUB  R30,R12
0009be 09fd      	SBC  R31,R13
0009bf 93e0 0160 	STS  _dif_int,R30
0009c1 93f0 0161 	STS  _dif_int+1,R31
                 ; 0000 006C         old_int=tmr_int2;
                +
0009c3 90c0 0162+LDS R12 , 0 + ( _tmr_int2 )
0009c5 90d0 0163+LDS R13 , 0 + ( _tmr_int2 ) + 1
                 	__GETWRMN 12,13,0,_tmr_int2
                 ; 0000 006D         zdvug=zdvug+2;
0009c7 01f3      	MOVW R30,R6
0009c8 9632      	ADIW R30,2
0009c9 013f      	MOVW R6,R30
                 ; 0000 006E 
                 ; 0000 006F         if (zdvug>max_line)
0009ca d173      	RCALL SUBOPT_0x5
0009cb 15e6      	CP   R30,R6
0009cc 05f7      	CPC  R31,R7
0009cd f444      	BRGE _0x2E
                 ; 0000 0070         {
                 ; 0000 0071             zdvug=0;
0009ce 2466      	CLR  R6
0009cf 2477      	CLR  R7
                 ; 0000 0072             n_pic++;
0009d0 9453      	INC  R5
                 ; 0000 0073             if (n_pic==7){n_pic=1;}
0009d1 e0e7      	LDI  R30,LOW(7)
0009d2 15e5      	CP   R30,R5
0009d3 f411      	BRNE _0x2F
0009d4 e0e1      	LDI  R30,LOW(1)
0009d5 2e5e      	MOV  R5,R30
                 ; 0000 0074         }
                 _0x2F:
                 ; 0000 0075         vzdvug=zdvug/30;
                 _0x2E:
0009d6 01d3      	MOVW R26,R6
0009d7 e1ee      	LDI  R30,LOW(30)
0009d8 e0f0      	LDI  R31,HIGH(30)
0009d9 d1c8      	RCALL __DIVW21
0009da 015f      	MOVW R10,R30
                 ; 0000 0076         vzdvug=vzdvug*30;
0009db e1ae      	LDI  R26,LOW(30)
0009dc e0b0      	LDI  R27,HIGH(30)
0009dd d1ac      	RCALL __MULW12
0009de 015f      	MOVW R10,R30
                 ; 0000 0077         tmr_line=(tmr_int2-dif_int)/max_line;
0009df 91a0 0160 	LDS  R26,_dif_int
0009e1 91b0 0161 	LDS  R27,_dif_int+1
0009e3 d155      	RCALL SUBOPT_0x4
0009e4 1bea      	SUB  R30,R26
0009e5 0bfb      	SBC  R31,R27
0009e6 01df      	MOVW R26,R30
0009e7 d156      	RCALL SUBOPT_0x5
0009e8 d1b9      	RCALL __DIVW21
0009e9 93e0 0164 	STS  _tmr_line,R30
0009eb 93f0 0165 	STS  _tmr_line+1,R31
                 ; 0000 0078         if (tmr_to_sleep<1)
0009ed d155      	RCALL SUBOPT_0x6
0009ee f44c      	BRGE _0x30
                 ; 0000 0079         {
                 ; 0000 007A             curent_line=vzdvug;
                +
0009ef 92a0 0166+STS _curent_line + ( 0 ) , R10
0009f1 92b0 0167+STS _curent_line + ( 0 ) + 1 , R11
                 	__PUTWMRN _curent_line,0,10,11
                 ; 0000 007B             //curent_line=0;
                 ; 0000 007C             cnt_line=0;
0009f3 e0e0      	LDI  R30,LOW(0)
0009f4 93e0 0168 	STS  _cnt_line,R30
0009f6 93e0 0169 	STS  _cnt_line+1,R30
                 ; 0000 007D         }
                 ; 0000 007E         tmr_to_sleep=0;
                 _0x30:
0009f8 e0e0      	LDI  R30,LOW(0)
0009f9 93e0 016a 	STS  _tmr_to_sleep,R30
0009fb 93e0 016b 	STS  _tmr_to_sleep+1,R30
                 ; 0000 007F     }
                 ; 0000 0080 
                 ; 0000 0081 }
                 _0x2D:
0009fd c049      	RJMP _0x46
                 ; .FEND
                 ;
                 ;// External Interrupt 1 service routine
                 ;interrupt [EXT_INT1] void ext_int1_isr(void)
                 ; 0000 0085 {
                 _ext_int1_isr:
                 ; .FSTART _ext_int1_isr
0009fe d11c      	RCALL SUBOPT_0x0
                 ; 0000 0086 // Place your code here
                 ; 0000 0087 n_pic++;
0009ff 9453      	INC  R5
                 ; 0000 0088 if (n_pic==7){n_pic=1;}
000a00 e0e7      	LDI  R30,LOW(7)
000a01 15e5      	CP   R30,R5
000a02 f411      	BRNE _0x31
000a03 e0e1      	LDI  R30,LOW(1)
000a04 2e5e      	MOV  R5,R30
                 ; 0000 0089 delay_ms(100);
                 _0x31:
000a05 d143      	RCALL SUBOPT_0x7
                 ; 0000 008A set_led_state(n_pic,0,0);
000a06 d145      	RCALL SUBOPT_0x8
                 ; 0000 008B delay_ms(100);
                 ; 0000 008C set_led_state(0,0,0);
000a07 d14a      	RCALL SUBOPT_0x9
000a08 d149      	RCALL SUBOPT_0x9
000a09 d14b      	RCALL SUBOPT_0xA
                 ; 0000 008D delay_ms(100);
000a0a d13e      	RCALL SUBOPT_0x7
                 ; 0000 008E set_led_state(n_pic,0,0);
000a0b d140      	RCALL SUBOPT_0x8
                 ; 0000 008F delay_ms(100);
                 ; 0000 0090 set_led_state(0,0,0);
000a0c d145      	RCALL SUBOPT_0x9
000a0d d144      	RCALL SUBOPT_0x9
000a0e d146      	RCALL SUBOPT_0xA
                 ; 0000 0091 }
000a0f c037      	RJMP _0x46
                 ; .FEND
                 ;
                 ;
                 ;
                 ;// Timer1 overflow interrupt service routine
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 0097 {
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
000a10 d10a      	RCALL SUBOPT_0x0
                 ; 0000 0098 tmr_to_sleep++;
000a11 e6aa      	LDI  R26,LOW(_tmr_to_sleep)
000a12 e0b1      	LDI  R27,HIGH(_tmr_to_sleep)
000a13 d143      	RCALL SUBOPT_0xB
                 ; 0000 0099 if (tmr_to_sleep==1) {set_led_state(255,0,0);}
000a14 d12e      	RCALL SUBOPT_0x6
000a15 f419      	BRNE _0x32
000a16 d146      	RCALL SUBOPT_0xC
000a17 d13a      	RCALL SUBOPT_0x9
000a18 d13c      	RCALL SUBOPT_0xA
                 ; 0000 009A if (tmr_to_sleep==2) {set_led_state(255,255,0);}
                 _0x32:
000a19 d146      	RCALL SUBOPT_0xD
000a1a 9712      	SBIW R26,2
000a1b f419      	BRNE _0x33
000a1c d140      	RCALL SUBOPT_0xC
000a1d d13f      	RCALL SUBOPT_0xC
000a1e d136      	RCALL SUBOPT_0xA
                 ; 0000 009B if (tmr_to_sleep==3) {set_led_state(255,255,255);}
                 _0x33:
000a1f d140      	RCALL SUBOPT_0xD
000a20 9713      	SBIW R26,3
000a21 f419      	BRNE _0x34
000a22 d13a      	RCALL SUBOPT_0xC
000a23 d139      	RCALL SUBOPT_0xC
000a24 d140      	RCALL SUBOPT_0xE
                 ; 0000 009C delay_ms(300);
                 _0x34:
000a25 e2ac      	LDI  R26,LOW(300)
000a26 e0b1      	LDI  R27,HIGH(300)
000a27 d14c      	RCALL _delay_ms
                 ; 0000 009D if (tmr_to_sleep>3){
000a28 d137      	RCALL SUBOPT_0xD
000a29 9714      	SBIW R26,4
000a2a f0e4      	BRLT _0x35
                 ; 0000 009E 
                 ; 0000 009F // Place your code here
                 ; 0000 00A0    set_led_state(255,255,255);
000a2b d131      	RCALL SUBOPT_0xC
000a2c d130      	RCALL SUBOPT_0xC
000a2d d137      	RCALL SUBOPT_0xE
                 ; 0000 00A1    delay_ms(50);
000a2e d138      	RCALL SUBOPT_0xF
                 ; 0000 00A2    set_led_state(0,0,0);;
000a2f d122      	RCALL SUBOPT_0x9
000a30 d121      	RCALL SUBOPT_0x9
000a31 d123      	RCALL SUBOPT_0xA
                 ; 0000 00A3    delay_ms(50);
000a32 d134      	RCALL SUBOPT_0xF
                 ; 0000 00A4       set_led_state(255,255,255);
000a33 d129      	RCALL SUBOPT_0xC
000a34 d128      	RCALL SUBOPT_0xC
000a35 d12f      	RCALL SUBOPT_0xE
                 ; 0000 00A5    delay_ms(50);
000a36 d130      	RCALL SUBOPT_0xF
                 ; 0000 00A6    set_led_state(0,0,0);
000a37 d11a      	RCALL SUBOPT_0x9
000a38 d119      	RCALL SUBOPT_0x9
000a39 d11b      	RCALL SUBOPT_0xA
                 ; 0000 00A7    delay_ms(50);
000a3a d12c      	RCALL SUBOPT_0xF
                 ; 0000 00A8       set_led_state(255,255,255);
000a3b d121      	RCALL SUBOPT_0xC
000a3c d120      	RCALL SUBOPT_0xC
000a3d d127      	RCALL SUBOPT_0xE
                 ; 0000 00A9    delay_ms(50);
000a3e d128      	RCALL SUBOPT_0xF
                 ; 0000 00AA    set_led_state(0,0,0);
000a3f d112      	RCALL SUBOPT_0x9
000a40 d111      	RCALL SUBOPT_0x9
000a41 d113      	RCALL SUBOPT_0xA
                 ; 0000 00AB    delay_ms(50);
000a42 d124      	RCALL SUBOPT_0xF
                 ; 0000 00AC    PORTB=255;
000a43 d0f0      	RCALL SUBOPT_0x3
                 ; 0000 00AD    PORTC=255;
                 ; 0000 00AE    PORTD=255;
                 ; 0000 00AF sleep_enable(); //Разрешение на спящий режим
000a44 d0c5      	RCALL _sleep_enable
                 ; 0000 00B0 //idle();
                 ; 0000 00B1 powerdown(); //Самый экономный режим энергосбережения
000a45 d0cc      	RCALL _powerdown
                 ; 0000 00B2 #asm("sleep"); //Отправляем контроллер в спящий режим
000a46 9588      	sleep
                 ; 0000 00B3 }
                 ; 0000 00B4 }
                 _0x35:
                 _0x46:
000a47 91e9      	LD   R30,Y+
000a48 bfef      	OUT  SREG,R30
000a49 91f9      	LD   R31,Y+
000a4a 91e9      	LD   R30,Y+
000a4b 91b9      	LD   R27,Y+
000a4c 91a9      	LD   R26,Y+
000a4d 9199      	LD   R25,Y+
000a4e 9189      	LD   R24,Y+
000a4f 9179      	LD   R23,Y+
000a50 9169      	LD   R22,Y+
000a51 90f9      	LD   R15,Y+
000a52 9019      	LD   R1,Y+
000a53 9009      	LD   R0,Y+
000a54 9518      	RETI
                 ; .FEND
                 ;
                 ;// Declare your global variables here
                 ;
                 ;void main(void)
                 ; 0000 00B9 {
                 _main:
                 ; .FSTART _main
                 ; 0000 00BA // Declare your local variables here
                 ; 0000 00BB 
                 ; 0000 00BC // Input/Output Ports initialization
                 ; 0000 00BD // Port B initialization
                 ; 0000 00BE // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
                 ; 0000 00BF // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
                 ; 0000 00C0 PORTB=0x00;
000a55 e0e0      	LDI  R30,LOW(0)
000a56 bbe8      	OUT  0x18,R30
                 ; 0000 00C1 DDRB=0xFF;
000a57 efef      	LDI  R30,LOW(255)
000a58 bbe7      	OUT  0x17,R30
                 ; 0000 00C2 
                 ; 0000 00C3 // Port C initialization
                 ; 0000 00C4 // Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
                 ; 0000 00C5 // State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
                 ; 0000 00C6 PORTC=0x00;
000a59 e0e0      	LDI  R30,LOW(0)
000a5a bbe5      	OUT  0x15,R30
                 ; 0000 00C7 DDRC=0x7F;
000a5b e7ef      	LDI  R30,LOW(127)
000a5c bbe4      	OUT  0x14,R30
                 ; 0000 00C8 
                 ; 0000 00C9 // Port D initialization
                 ; 0000 00CA // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=In Func1=Out Func0=Out
                 ; 0000 00CB // State7=0 State6=0 State5=0 State4=0 State3=T State2=T State1=0 State0=0
                 ; 0000 00CC PORTD=0x00;
000a5d e0e0      	LDI  R30,LOW(0)
000a5e bbe2      	OUT  0x12,R30
                 ; 0000 00CD DDRD=0xF3;
000a5f efe3      	LDI  R30,LOW(243)
000a60 bbe1      	OUT  0x11,R30
                 ; 0000 00CE 
                 ; 0000 00CF // Timer/Counter 0 initialization
                 ; 0000 00D0 // Clock source: System Clock
                 ; 0000 00D1 // Clock value: Timer 0 Stopped
                 ; 0000 00D2 TCCR0=0x00;
000a61 e0e0      	LDI  R30,LOW(0)
000a62 bfe3      	OUT  0x33,R30
                 ; 0000 00D3 TCNT0=0x00;
000a63 bfe2      	OUT  0x32,R30
                 ; 0000 00D4 
                 ; 0000 00D5 
                 ; 0000 00D6 // Timer/Counter 1 initialization
                 ; 0000 00D7 // Clock source: System Clock
                 ; 0000 00D8 // Clock value: 125,000 kHz
                 ; 0000 00D9 // Mode: Normal top=0xFFFF
                 ; 0000 00DA // OC1A output: Discon.
                 ; 0000 00DB // OC1B output: Discon.
                 ; 0000 00DC // Noise Canceler: Off
                 ; 0000 00DD // Input Capture on Falling Edge
                 ; 0000 00DE // Timer1 Overflow Interrupt: On
                 ; 0000 00DF // Input Capture Interrupt: Off
                 ; 0000 00E0 // Compare A Match Interrupt: Off
                 ; 0000 00E1 // Compare B Match Interrupt: Off
                 ; 0000 00E2 TCCR1A=0x00;
000a64 bdef      	OUT  0x2F,R30
                 ; 0000 00E3 TCCR1B=0x04;
000a65 e0e4      	LDI  R30,LOW(4)
000a66 bdee      	OUT  0x2E,R30
                 ; 0000 00E4 TCNT1H=0x00;
000a67 d0c8      	RCALL SUBOPT_0x2
                 ; 0000 00E5 TCNT1L=0x00;
                 ; 0000 00E6 ICR1H=0x00;
000a68 e0e0      	LDI  R30,LOW(0)
000a69 bde7      	OUT  0x27,R30
                 ; 0000 00E7 ICR1L=0x00;
000a6a bde6      	OUT  0x26,R30
                 ; 0000 00E8 OCR1AH=0x00;
000a6b bdeb      	OUT  0x2B,R30
                 ; 0000 00E9 OCR1AL=0x00;
000a6c bdea      	OUT  0x2A,R30
                 ; 0000 00EA OCR1BH=0x00;
000a6d bde9      	OUT  0x29,R30
                 ; 0000 00EB OCR1BL=0x00;
000a6e bde8      	OUT  0x28,R30
                 ; 0000 00EC 
                 ; 0000 00ED // Timer/Counter 2 initialization
                 ; 0000 00EE // Clock source: System Clock
                 ; 0000 00EF // Clock value: Timer2 Stopped
                 ; 0000 00F0 // Mode: Normal top=0xFF
                 ; 0000 00F1 // OC2 output: Disconnected
                 ; 0000 00F2 ASSR=0x00;
000a6f bde2      	OUT  0x22,R30
                 ; 0000 00F3 TCCR2=0x00;
000a70 bde5      	OUT  0x25,R30
                 ; 0000 00F4 TCNT2=0x00;
000a71 bde4      	OUT  0x24,R30
                 ; 0000 00F5 OCR2=0x00;
000a72 bde3      	OUT  0x23,R30
                 ; 0000 00F6 
                 ; 0000 00F7 // External Interrupt(s) initialization
                 ; 0000 00F8 // INT0: On
                 ; 0000 00F9 // INT0 Mode: Low level
                 ; 0000 00FA // INT1: On
                 ; 0000 00FB // INT1 Mode: Low level
                 ; 0000 00FC GICR|=0xC0;
000a73 b7eb      	IN   R30,0x3B
000a74 6ce0      	ORI  R30,LOW(0xC0)
000a75 bfeb      	OUT  0x3B,R30
                 ; 0000 00FD MCUCR=0x00;
000a76 e0e0      	LDI  R30,LOW(0)
000a77 bfe5      	OUT  0x35,R30
                 ; 0000 00FE GIFR=0xC0;
000a78 ece0      	LDI  R30,LOW(192)
000a79 bfea      	OUT  0x3A,R30
                 ; 0000 00FF 
                 ; 0000 0100 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0101 TIMSK=0x04;
000a7a e0e4      	LDI  R30,LOW(4)
000a7b bfe9      	OUT  0x39,R30
                 ; 0000 0102 
                 ; 0000 0103 // USART initialization
                 ; 0000 0104 // USART disabled
                 ; 0000 0105 UCSRB=0x00;
000a7c e0e0      	LDI  R30,LOW(0)
000a7d b9ea      	OUT  0xA,R30
                 ; 0000 0106 
                 ; 0000 0107 // Analog Comparator initialization
                 ; 0000 0108 // Analog Comparator: Off
                 ; 0000 0109 // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 010A ACSR=0x80;
000a7e e8e0      	LDI  R30,LOW(128)
000a7f b9e8      	OUT  0x8,R30
                 ; 0000 010B SFIOR=0x00;
000a80 e0e0      	LDI  R30,LOW(0)
000a81 bfe0      	OUT  0x30,R30
                 ; 0000 010C 
                 ; 0000 010D // ADC initialization
                 ; 0000 010E // ADC disabled
                 ; 0000 010F ADCSRA=0x00;
000a82 b9e6      	OUT  0x6,R30
                 ; 0000 0110 
                 ; 0000 0111 // SPI initialization
                 ; 0000 0112 // SPI disabled
                 ; 0000 0113 SPCR=0x00;
000a83 b9ed      	OUT  0xD,R30
                 ; 0000 0114 
                 ; 0000 0115 // TWI initialization
                 ; 0000 0116 // TWI disabled
                 ; 0000 0117 TWCR=0x00;
000a84 bfe6      	OUT  0x36,R30
                 ; 0000 0118 
                 ; 0000 0119 // Global enable interrupts
                 ; 0000 011A #asm("sei")
000a85 9478      	sei
                 ; 0000 011B 
                 ; 0000 011C while (1)
                 _0x36:
                 ; 0000 011D       {
                 ; 0000 011E       // Place your code here
                 ; 0000 011F 
                 ; 0000 0120           if(cnt_line<max_line && ready==1)
000a86 d0b7      	RCALL SUBOPT_0x5
000a87 91a0 0168 	LDS  R26,_cnt_line
000a89 91b0 0169 	LDS  R27,_cnt_line+1
000a8b 17ae      	CP   R26,R30
000a8c 07bf      	CPC  R27,R31
000a8d f41c      	BRGE _0x3A
000a8e e0e1      	LDI  R30,LOW(1)
000a8f 15e4      	CP   R30,R4
000a90 f009      	BREQ _0x3B
                 _0x3A:
000a91 c071      	RJMP _0x39
                 _0x3B:
                 ; 0000 0121           {
                 ; 0000 0122               tmr_int = TCNT1L | TCNT1H << 8;
000a92 d096      	RCALL SUBOPT_0x1
000a93 014f      	MOVW R8,R30
                 ; 0000 0123               if(tmr_int>tmr_line*cnt_line)
000a94 91e0 0168 	LDS  R30,_cnt_line
000a96 91f0 0169 	LDS  R31,_cnt_line+1
000a98 91a0 0164 	LDS  R26,_tmr_line
000a9a 91b0 0165 	LDS  R27,_tmr_line+1
000a9c d0ed      	RCALL __MULW12
000a9d 15e8      	CP   R30,R8
000a9e 05f9      	CPC  R31,R9
000a9f f00c      	BRLT PC+2
000aa0 c061      	RJMP _0x3C
                 ; 0000 0124               {
                 ; 0000 0125 //                curent_line--;
                 ; 0000 0126 //                cnt_line++;
                 ; 0000 0127 //                if (curent_line<1) {curent_line=max_line;}
                 ; 0000 0128                 curent_line++;
000aa1 e6a6      	LDI  R26,LOW(_curent_line)
000aa2 e0b1      	LDI  R27,HIGH(_curent_line)
000aa3 d0b3      	RCALL SUBOPT_0xB
                 ; 0000 0129                 cnt_line++;
000aa4 e6a8      	LDI  R26,LOW(_cnt_line)
000aa5 e0b1      	LDI  R27,HIGH(_cnt_line)
000aa6 d0b0      	RCALL SUBOPT_0xB
                 ; 0000 012A                 if (curent_line==max_line) {curent_line=0;}
000aa7 d096      	RCALL SUBOPT_0x5
000aa8 91a0 0166 	LDS  R26,_curent_line
000aaa 91b0 0167 	LDS  R27,_curent_line+1
000aac 17ea      	CP   R30,R26
000aad 07fb      	CPC  R31,R27
000aae f429      	BRNE _0x3D
000aaf e0e0      	LDI  R30,LOW(0)
000ab0 93e0 0166 	STS  _curent_line,R30
000ab2 93e0 0167 	STS  _curent_line+1,R30
                 ; 0000 012B                 if (n_pic==1){set_led_state(a[curent_line],b[curent_line],c[curent_line]);}
                 _0x3D:
000ab4 e0e1      	LDI  R30,LOW(1)
000ab5 15e5      	CP   R30,R5
000ab6 f451      	BRNE _0x3E
000ab7 d0b2      	RCALL SUBOPT_0x10
000ab8 5dea      	SUBI R30,LOW(-_a*2)
000ab9 4fff      	SBCI R31,HIGH(-_a*2)
000aba d0b4      	RCALL SUBOPT_0x11
000abb 5dee      	SUBI R30,LOW(-_b*2)
000abc 4ffe      	SBCI R31,HIGH(-_b*2)
000abd d0b1      	RCALL SUBOPT_0x11
000abe 5ee2      	SUBI R30,LOW(-_c*2)
000abf 4ffd      	SBCI R31,HIGH(-_c*2)
000ac0 d0b1      	RCALL SUBOPT_0x12
                 ; 0000 012C                 if (n_pic==2){set_led_state(a2[curent_line],b2[curent_line],c2[curent_line]);}
                 _0x3E:
000ac1 e0e2      	LDI  R30,LOW(2)
000ac2 15e5      	CP   R30,R5
000ac3 f451      	BRNE _0x3F
000ac4 d0a5      	RCALL SUBOPT_0x10
000ac5 5ee6      	SUBI R30,LOW(-_a2*2)
000ac6 4ffc      	SBCI R31,HIGH(-_a2*2)
000ac7 d0a7      	RCALL SUBOPT_0x11
000ac8 5eea      	SUBI R30,LOW(-_b2*2)
000ac9 4ffb      	SBCI R31,HIGH(-_b2*2)
000aca d0a4      	RCALL SUBOPT_0x11
000acb 5eee      	SUBI R30,LOW(-_c2*2)
000acc 4ffa      	SBCI R31,HIGH(-_c2*2)
000acd d0a4      	RCALL SUBOPT_0x12
                 ; 0000 012D                 if (n_pic==3){set_led_state(a3[curent_line],b3[curent_line],c3[curent_line]);}
                 _0x3F:
000ace e0e3      	LDI  R30,LOW(3)
000acf 15e5      	CP   R30,R5
000ad0 f451      	BRNE _0x40
000ad1 d098      	RCALL SUBOPT_0x10
000ad2 5fe2      	SUBI R30,LOW(-_a3*2)
000ad3 4ff9      	SBCI R31,HIGH(-_a3*2)
000ad4 d09a      	RCALL SUBOPT_0x11
000ad5 5fe6      	SUBI R30,LOW(-_b3*2)
000ad6 4ff8      	SBCI R31,HIGH(-_b3*2)
000ad7 d097      	RCALL SUBOPT_0x11
000ad8 5fea      	SUBI R30,LOW(-_c3*2)
000ad9 4ff7      	SBCI R31,HIGH(-_c3*2)
000ada d097      	RCALL SUBOPT_0x12
                 ; 0000 012E                 if (n_pic==4){set_led_state(a4[curent_line],b4[curent_line],c4[curent_line]);}
                 _0x40:
000adb e0e4      	LDI  R30,LOW(4)
000adc 15e5      	CP   R30,R5
000add f451      	BRNE _0x41
000ade d08b      	RCALL SUBOPT_0x10
000adf 5fee      	SUBI R30,LOW(-_a4*2)
000ae0 4ff6      	SBCI R31,HIGH(-_a4*2)
000ae1 d08d      	RCALL SUBOPT_0x11
000ae2 50e2      	SUBI R30,LOW(-_b4*2)
000ae3 4ff6      	SBCI R31,HIGH(-_b4*2)
000ae4 d08a      	RCALL SUBOPT_0x11
000ae5 50e6      	SUBI R30,LOW(-_c4*2)
000ae6 4ff5      	SBCI R31,HIGH(-_c4*2)
000ae7 d08a      	RCALL SUBOPT_0x12
                 ; 0000 012F                 if (n_pic==5){set_led_state(a5[curent_line],b5[curent_line],c5[curent_line]);}
                 _0x41:
000ae8 e0e5      	LDI  R30,LOW(5)
000ae9 15e5      	CP   R30,R5
000aea f451      	BRNE _0x42
000aeb d07e      	RCALL SUBOPT_0x10
000aec 50ea      	SUBI R30,LOW(-_a5*2)
000aed 4ff4      	SBCI R31,HIGH(-_a5*2)
000aee d080      	RCALL SUBOPT_0x11
000aef 50ee      	SUBI R30,LOW(-_b5*2)
000af0 4ff3      	SBCI R31,HIGH(-_b5*2)
000af1 d07d      	RCALL SUBOPT_0x11
000af2 51e2      	SUBI R30,LOW(-_c5*2)
000af3 4ff2      	SBCI R31,HIGH(-_c5*2)
000af4 d07d      	RCALL SUBOPT_0x12
                 ; 0000 0130                 if (n_pic==6){set_led_state(a6[curent_line],b6[curent_line],c6[curent_line]);}
                 _0x42:
000af5 e0e6      	LDI  R30,LOW(6)
000af6 15e5      	CP   R30,R5
000af7 f451      	BRNE _0x43
000af8 d071      	RCALL SUBOPT_0x10
000af9 51e6      	SUBI R30,LOW(-_a6*2)
000afa 4ff1      	SBCI R31,HIGH(-_a6*2)
000afb d073      	RCALL SUBOPT_0x11
000afc 51ea      	SUBI R30,LOW(-_b6*2)
000afd 4ff0      	SBCI R31,HIGH(-_b6*2)
000afe d070      	RCALL SUBOPT_0x11
000aff 51ee      	SUBI R30,LOW(-_c6*2)
000b00 4eff      	SBCI R31,HIGH(-_c6*2)
000b01 d070      	RCALL SUBOPT_0x12
                 ; 0000 0131               }
                 _0x43:
                 ; 0000 0132           }
                 _0x3C:
                 ; 0000 0133               else
000b02 c003      	RJMP _0x44
                 _0x39:
                 ; 0000 0134               {
                 ; 0000 0135                set_led_state(0,0,0);
000b03 d04e      	RCALL SUBOPT_0x9
000b04 d04d      	RCALL SUBOPT_0x9
000b05 d04f      	RCALL SUBOPT_0xA
                 ; 0000 0136               }
                 _0x44:
                 ; 0000 0137         ready=1;
000b06 e0e1      	LDI  R30,LOW(1)
000b07 2e4e      	MOV  R4,R30
                 ; 0000 0138       }
000b08 cf7d      	RJMP _0x36
                 ; 0000 0139 }
                 _0x45:
000b09 cfff      	RJMP _0x45
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _sleep_enable:
                 ; .FSTART _sleep_enable
000b0a b7e5         in   r30,power_ctrl_reg
000b0b 68e0         sbr  r30,__se_bit
000b0c bfe5         out  power_ctrl_reg,r30
000b0d 9508      	RET
                 ; .FEND
                 _sleep_disable:
                 ; .FSTART _sleep_disable
000b0e b7e5         in   r30,power_ctrl_reg
000b0f 77ef         cbr  r30,__se_bit
000b10 bfe5         out  power_ctrl_reg,r30
000b11 9508      	RET
                 ; .FEND
                 _powerdown:
                 ; .FSTART _powerdown
000b12 b7e5         in   r30,power_ctrl_reg
000b13 78ef         cbr  r30,__sm_mask
000b14 62e0         sbr  r30,__sm_powerdown
000b15 bfe5         out  power_ctrl_reg,r30
000b16 b7ef         in   r30,sreg
000b17 9478         sei
000b18 9588         sleep
000b19 bfef         out  sreg,r30
000b1a 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _dif_int:
000160           	.BYTE 0x2
                 _tmr_int2:
000162           	.BYTE 0x2
                 _tmr_line:
000164           	.BYTE 0x2
                 _curent_line:
000166           	.BYTE 0x2
                 _cnt_line:
000168           	.BYTE 0x2
                 _tmr_to_sleep:
00016a           	.BYTE 0x2
                 _max_line:
00016c           	.BYTE 0x2
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x0:
000b1b 920a      	ST   -Y,R0
000b1c 921a      	ST   -Y,R1
000b1d 92fa      	ST   -Y,R15
000b1e 936a      	ST   -Y,R22
000b1f 937a      	ST   -Y,R23
000b20 938a      	ST   -Y,R24
000b21 939a      	ST   -Y,R25
000b22 93aa      	ST   -Y,R26
000b23 93ba      	ST   -Y,R27
000b24 93ea      	ST   -Y,R30
000b25 93fa      	ST   -Y,R31
000b26 b7ef      	IN   R30,SREG
000b27 93ea      	ST   -Y,R30
000b28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000b29 b5ec      	IN   R30,0x2C
000b2a 2fae      	MOV  R26,R30
000b2b b5ed      	IN   R30,0x2D
000b2c 2ffe      	MOV  R31,R30
000b2d e0e0      	LDI  R30,0
000b2e 2bea      	OR   R30,R26
000b2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000b30 e0e0      	LDI  R30,LOW(0)
000b31 bded      	OUT  0x2D,R30
000b32 bdec      	OUT  0x2C,R30
000b33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000b34 efef      	LDI  R30,LOW(255)
000b35 bbe8      	OUT  0x18,R30
000b36 bbe5      	OUT  0x15,R30
000b37 bbe2      	OUT  0x12,R30
000b38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000b39 91e0 0162 	LDS  R30,_tmr_int2
000b3b 91f0 0163 	LDS  R31,_tmr_int2+1
000b3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x5:
000b3e 91e0 016c 	LDS  R30,_max_line
000b40 91f0 016d 	LDS  R31,_max_line+1
000b42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
000b43 91a0 016a 	LDS  R26,_tmr_to_sleep
000b45 91b0 016b 	LDS  R27,_tmr_to_sleep+1
000b47 9711      	SBIW R26,1
000b48 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x7:
000b49 e6a4      	LDI  R26,LOW(100)
000b4a e0b0      	LDI  R27,0
000b4b c028      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
000b4c 925a      	ST   -Y,R5
000b4d e0e0      	LDI  R30,LOW(0)
000b4e 93ea      	ST   -Y,R30
000b4f e0a0      	LDI  R26,LOW(0)
000b50 dddb      	RCALL _set_led_state
000b51 cff7      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x9:
000b52 e0e0      	LDI  R30,LOW(0)
000b53 93ea      	ST   -Y,R30
000b54 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
000b55 e0a0      	LDI  R26,LOW(0)
000b56 cdd5      	RJMP _set_led_state
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xB:
000b57 91ed      	LD   R30,X+
000b58 91fd      	LD   R31,X+
000b59 9631      	ADIW R30,1
000b5a 93fe      	ST   -X,R31
000b5b 93ee      	ST   -X,R30
000b5c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xC:
000b5d efef      	LDI  R30,LOW(255)
000b5e 93ea      	ST   -Y,R30
000b5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xD:
000b60 91a0 016a 	LDS  R26,_tmr_to_sleep
000b62 91b0 016b 	LDS  R27,_tmr_to_sleep+1
000b64 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE:
000b65 efaf      	LDI  R26,LOW(255)
000b66 cdc5      	RJMP _set_led_state
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xF:
000b67 e3a2      	LDI  R26,LOW(50)
000b68 e0b0      	LDI  R27,0
000b69 c00a      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x10:
000b6a 91e0 0166 	LDS  R30,_curent_line
000b6c 91f0 0167 	LDS  R31,_curent_line+1
000b6e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:20 WORDS
                 SUBOPT_0x11:
000b6f 91e4      	LPM  R30,Z
000b70 93ea      	ST   -Y,R30
000b71 cff8      	RJMP SUBOPT_0x10
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12:
000b72 91a4      	LPM  R26,Z
000b73 cdb8      	RJMP _set_led_state
                 
                 
                 	.CSEG
                 _delay_ms:
000b74 9610      	adiw r26,0
000b75 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000b76 ed80     +LDI R24 , LOW ( 0x7D0 )
000b77 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000b78 9701     +SBIW R24 , 1
000b79 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000b7a 95a8      	wdr
000b7b 9711      	sbiw r26,1
000b7c f7c9      	brne __delay_ms0
                 __delay_ms1:
000b7d 9508      	ret
                 
                 __ANEGW1:
000b7e 95f1      	NEG  R31
000b7f 95e1      	NEG  R30
000b80 40f0      	SBCI R31,0
000b81 9508      	RET
                 
                 __MULW12U:
000b82 9ffa      	MUL  R31,R26
000b83 2df0      	MOV  R31,R0
000b84 9feb      	MUL  R30,R27
000b85 0df0      	ADD  R31,R0
000b86 9fea      	MUL  R30,R26
000b87 2de0      	MOV  R30,R0
000b88 0df1      	ADD  R31,R1
000b89 9508      	RET
                 
                 __MULW12:
000b8a d01c      	RCALL __CHKSIGNW
000b8b dff6      	RCALL __MULW12U
000b8c f40e      	BRTC __MULW121
000b8d dff0      	RCALL __ANEGW1
                 __MULW121:
000b8e 9508      	RET
                 
                 __DIVW21U:
000b8f 2400      	CLR  R0
000b90 2411      	CLR  R1
000b91 e190      	LDI  R25,16
                 __DIVW21U1:
000b92 0faa      	LSL  R26
000b93 1fbb      	ROL  R27
000b94 1c00      	ROL  R0
000b95 1c11      	ROL  R1
000b96 1a0e      	SUB  R0,R30
000b97 0a1f      	SBC  R1,R31
000b98 f418      	BRCC __DIVW21U2
000b99 0e0e      	ADD  R0,R30
000b9a 1e1f      	ADC  R1,R31
000b9b c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000b9c 60a1      	SBR  R26,1
                 __DIVW21U3:
000b9d 959a      	DEC  R25
000b9e f799      	BRNE __DIVW21U1
000b9f 01fd      	MOVW R30,R26
000ba0 01d0      	MOVW R26,R0
000ba1 9508      	RET
                 
                 __DIVW21:
000ba2 d004      	RCALL __CHKSIGNW
000ba3 dfeb      	RCALL __DIVW21U
000ba4 f40e      	BRTC __DIVW211
000ba5 dfd8      	RCALL __ANEGW1
                 __DIVW211:
000ba6 9508      	RET
                 
                 __CHKSIGNW:
000ba7 94e8      	CLT
000ba8 fff7      	SBRS R31,7
000ba9 c002      	RJMP __CHKSW1
000baa dfd3      	RCALL __ANEGW1
000bab 9468      	SET
                 __CHKSW1:
000bac ffb7      	SBRS R27,7
000bad c006      	RJMP __CHKSW2
000bae 95a0      	COM  R26
000baf 95b0      	COM  R27
000bb0 9611      	ADIW R26,1
000bb1 f800      	BLD  R0,0
000bb2 9403      	INC  R0
000bb3 fa00      	BST  R0,0
                 __CHKSW2:
000bb4 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  17 r1 :   8 r2 :   0 r3 :   0 r4 :   3 r5 :  13 r6 :   5 r7 :   2 
r8 :   2 r9 :   1 r10:   3 r11:   1 r12:   2 r13:   2 r14:   0 r15:   2 
r16:   0 r17:   0 r18:   0 r19:   0 r20:   0 r21:   0 r22:   4 r23:   2 
r24:  11 r25:   7 r26:  46 r27:  26 r28:   2 r29:   1 r30: 227 r31:  51 
x  :   7 y  :  50 z  :   9 
Registers used: 26 out of 35 (74.3%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :   5 and   :   0 andi  :  20 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  23 
brge  :   4 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   2 brmi  :   0 brne  :  18 brpl  :   0 brsh  :   0 brtc  :   2 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 cbi   :  20 
cbr   :   2 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :   7 
cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   2 cp    :  13 
cpc   :   5 cpi   :   1 cpse  :   0 dec   :   2 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   8 
inc   :   3 ld    :  18 ldd   :  16 ldi   :  73 lds   :  24 lpm   :  11 
lsl   :   1 lsr   :   0 mov   :   7 movw  :  12 mul   :   3 muls  :   0 
mulsu :   0 neg   :   2 nop   :   0 or    :   1 ori   :   1 out   :  49 
pop   :   0 push  :   0 rcall : 109 ret   :  23 reti  :   1 rjmp  :  59 
rol   :   3 ror   :   0 sbc   :   3 sbci  :  19 sbi   :  20 sbic  :   0 
sbis  :   0 sbiw  :   9 sbr   :   3 sbrc  :   0 sbrs  :   2 sec   :   0 
seh   :   0 sei   :   2 sen   :   0 ser   :   0 ses   :   0 set   :   1 
sev   :   0 sez   :   0 sleep :   2 spm   :   0 st    :  23 std   :   0 
sts   :  14 sub   :   3 subi  :  18 swap  :   0 tst   :   0 wdr   :   1 

Instructions used: 56 out of 114 (49.1%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00176a   1430   4564   5994    8192  73.2%
[.dseg] 0x000060 0x00016e      0     14     14    1024   1.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 29 warnings
