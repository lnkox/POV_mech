;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Professional
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 29.04.2014
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega8
;Program type            : Application
;AVR Core Clock frequency: 8,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;flash char a[]={0,1,1,1,129,193,97,33,33,33,97,65,1,225,225,33,33,33,225,225,1,1,1,129,225,97,225,129,1,1,1,225,225,33,3 ...
;flash char b[]={0,0,0,0,31,63,96,64,64,64,96,32,64,127,63,0,0,0,127,127,0,96,124,31,19,16,19,31,124,96,0,127,127,66,66,6 ...
;flash char c[]={0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8, ...
;
;flash char a2[]={0,1,1,1,1,1,1,1,1,1,1,193,193,97,97,225,225,1,1,225,225,97,97,97,225,225,1,1,1,1,1,129,193,225,1,1,1,1, ...
;flash char b2[]={0,0,0,0,0,0,0,0,0,30,63,99,96,96,96,48,48,64,64,127,63,0,0,0,127,127,0,0,96,120,30,15,13,15,127,96,0,0, ...
;flash char c2[]={0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8 ...
;
;flash char a3[]={0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,2 ...
;flash char b3[]={0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,2 ...
;flash char c3[]={0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15 ...
;
;
;flash char a4[]={0,0,0,0,0,0,0,0,0,0,0,0,192,240,248,252,252,254,254,254,254,254,254,254,252,252,248,240,192,0,0,0,0,0,0 ...
;flash char b4[]={0,0,0,0,0,0,0,0,0,0,0,0,7,31,57,97,193,195,135,255,255,191,135,195,193,113,61,15,3,0,0,0,0,0,0,0,0,0,0, ...
;flash char c4[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,7,7,7,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ...
;
;flash char a5[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,240,240,240,240,240,224,240,240,240,240,240,224,0,0,0,0,0,0,0,0,0,0 ...
;flash char b5[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,7,31,255,255,127,63,63,31,15,7,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, ...
;flash char c5[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ...
;
;
;flash char a6[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,192,32,16,152,136,8,8,136,152,16,32,192,128,0,0,0,0 ...
;flash char b6[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,48,64,140,145,33,32,32,33,145,140,64,48,31,0,0,0,0,0 ...
;flash char c6[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ...
;
;
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
; #include <delay.h>
; #include <sleep.h>
;char n_pic=1;
;int zdvug=0;
;char ready=0;
;int tmr_int;
;int vzdvug;
;int old_int;
;int dif_int;
;int tmr_int2;
;int tmr_line;
;int curent_line;
;int cnt_line=361;

	.DSEG
;int tmr_to_sleep=0;
;int max_line=250;
;void set_led_state(char a,char b,char c)
; 0000 0044 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0045     PORTC.5=!(a & 0B00000001);// 1
;PCODE: $0000000F VOL: 0
;	a -> Y+2
;	b -> Y+1
;	c -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0046     PORTC.4=!(a & 0B00000010);// 2
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0047     PORTC.3=!(a & 0B00000100);// 3
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0048     PORTC.2=!(a & 0B00001000);// 4
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0049     PORTC.1=!(a & 0B00010000);// 5
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 004A     PORTC.0=!(a & 0B00100000);// 6
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 004B     PORTB.2=!(a & 0B01000000);// 7
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 004C     PORTB.1=!(a & 0B10000000);// 8
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 004D     PORTB.3=!(b & 0B00000001);// 9
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 004E     PORTB.4=!(b & 0B00000010);// 10
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 004F     PORTB.5=!(b & 0B00000100);// 11
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0050     PORTB.0=!(b & 0B00001000);// 12
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0051     PORTD.7=!(b & 0B00010000);// 13
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0052     PORTD.6=!(b & 0B00100000);// 14
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0053     PORTD.5=!(b & 0B01000000);// 15
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0054     PORTB.7=!(b & 0B10000000);// 16
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0055     PORTB.6=!(c & 0B00000001);// 17
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 0056     PORTD.4=!(c & 0B00000010);// 18
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0057     PORTD.1=!(c & 0B00000100);// 19
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 0058     PORTD.0=!(c & 0B00001000);// 20
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 0059 
; 0000 005A }
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 005D {
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 005E sleep_disable();
;PCODE: $000000DD VOL: 0
; 0000 005F MCUCR=0x00;
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 0060 
; 0000 0061 
; 0000 0062     tmr_int2 = TCNT1L | TCNT1H << 8;
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0063     TCNT1H=0x00;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 0064     TCNT1L=0x00;
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 0065    PORTB=255;
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 0066    PORTC=255;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 0067    PORTD=255;
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 0068    ready=0;
;PCODE: $000000F0 VOL: 0
; 0000 0069     if (tmr_int2>1000)
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 006A     {
; 0000 006B         dif_int=tmr_int2-old_int;
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 006C         old_int=tmr_int2;
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 006D         zdvug=zdvug+2;
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 006E 
; 0000 006F         if (zdvug>max_line)
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 0070         {
; 0000 0071             zdvug=0;
;PCODE: $000000FF VOL: 0
; 0000 0072             n_pic++;
;PCODE: $00000100 VOL: 0
; 0000 0073             if (n_pic==7){n_pic=1;}
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 0074         }
;PCODE: $00000106 VOL: 0
; 0000 0075         vzdvug=zdvug/30;
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 0076         vzdvug=vzdvug*30;
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0077         tmr_line=(tmr_int2-dif_int)/max_line;
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0000 0078         if (tmr_to_sleep<1)
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 0079         {
; 0000 007A             curent_line=vzdvug;
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 007B             //curent_line=0;
; 0000 007C             cnt_line=0;
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 007D         }
; 0000 007E         tmr_to_sleep=0;
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 007F     }
; 0000 0080 
; 0000 0081 }
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;
;// External Interrupt 1 service routine
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 0085 {
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 0086 // Place your code here
; 0000 0087 n_pic++;
;PCODE: $00000127 VOL: 0
; 0000 0088 if (n_pic==7){n_pic=1;}
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 0089 delay_ms(100);
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 008A set_led_state(n_pic,0,0);
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 008B delay_ms(100);
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 008C set_led_state(0,0,0);
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 008D delay_ms(100);
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 008E set_led_state(n_pic,0,0);
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 008F delay_ms(100);
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 0090 set_led_state(0,0,0);
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 0091 }
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;
;
;
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0097 {
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 0098 tmr_to_sleep++;
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 0099 if (tmr_to_sleep==1) {set_led_state(255,0,0);}
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 009A if (tmr_to_sleep==2) {set_led_state(255,255,0);}
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 009B if (tmr_to_sleep==3) {set_led_state(255,255,255);}
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 009C delay_ms(300);
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 009D if (tmr_to_sleep>3){
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 009E 
; 0000 009F // Place your code here
; 0000 00A0    set_led_state(255,255,255);
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 00A1    delay_ms(50);
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 00A2    set_led_state(0,0,0);;
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 00A3    delay_ms(50);
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 00A4       set_led_state(255,255,255);
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 00A5    delay_ms(50);
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 00A6    set_led_state(0,0,0);
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 00A7    delay_ms(50);
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 00A8       set_led_state(255,255,255);
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 00A9    delay_ms(50);
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 00AA    set_led_state(0,0,0);
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 00AB    delay_ms(50);
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 00AC    PORTB=255;
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 00AD    PORTC=255;
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 00AE    PORTD=255;
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 00AF sleep_enable(); //Ðàçðåøåíèå íà ñïÿùèé ðåæèì
;PCODE: $000001B8 VOL: 0
; 0000 00B0 //idle();
; 0000 00B1 powerdown(); //Ñàìûé ýêîíîìíûé ðåæèì ýíåðãîñáåðåæåíèÿ
;PCODE: $000001B9 VOL: 0
; 0000 00B2 #asm("sleep"); //Îòïðàâëÿåì êîíòðîëëåð â ñïÿùèé ðåæèì
;PCODE: $000001BA VOL: 0
	sleep
;PCODE: $000001BB VOL: 0
; 0000 00B3 }
; 0000 00B4 }
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 00B9 {
;PCODE: $000001C0 VOL: 0
; 0000 00BA // Declare your local variables here
; 0000 00BB 
; 0000 00BC // Input/Output Ports initialization
; 0000 00BD // Port B initialization
; 0000 00BE // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 00BF // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 00C0 PORTB=0x00;
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
; 0000 00C1 DDRB=0xFF;
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0000 00C2 
; 0000 00C3 // Port C initialization
; 0000 00C4 // Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 00C5 // State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 00C6 PORTC=0x00;
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0000 00C7 DDRC=0x7F;
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
; 0000 00C8 
; 0000 00C9 // Port D initialization
; 0000 00CA // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=In Func1=Out Func0=Out
; 0000 00CB // State7=0 State6=0 State5=0 State4=0 State3=T State2=T State1=0 State0=0
; 0000 00CC PORTD=0x00;
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 00CD DDRD=0xF3;
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 00CE 
; 0000 00CF // Timer/Counter 0 initialization
; 0000 00D0 // Clock source: System Clock
; 0000 00D1 // Clock value: Timer 0 Stopped
; 0000 00D2 TCCR0=0x00;
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 00D3 TCNT0=0x00;
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 00D4 
; 0000 00D5 
; 0000 00D6 // Timer/Counter 1 initialization
; 0000 00D7 // Clock source: System Clock
; 0000 00D8 // Clock value: 125,000 kHz
; 0000 00D9 // Mode: Normal top=0xFFFF
; 0000 00DA // OC1A output: Discon.
; 0000 00DB // OC1B output: Discon.
; 0000 00DC // Noise Canceler: Off
; 0000 00DD // Input Capture on Falling Edge
; 0000 00DE // Timer1 Overflow Interrupt: On
; 0000 00DF // Input Capture Interrupt: Off
; 0000 00E0 // Compare A Match Interrupt: Off
; 0000 00E1 // Compare B Match Interrupt: Off
; 0000 00E2 TCCR1A=0x00;
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 00E3 TCCR1B=0x04;
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 00E4 TCNT1H=0x00;
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
; 0000 00E5 TCNT1L=0x00;
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 00E6 ICR1H=0x00;
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 00E7 ICR1L=0x00;
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 00E8 OCR1AH=0x00;
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 00E9 OCR1AL=0x00;
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 00EA OCR1BH=0x00;
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 00EB OCR1BL=0x00;
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 00EC 
; 0000 00ED // Timer/Counter 2 initialization
; 0000 00EE // Clock source: System Clock
; 0000 00EF // Clock value: Timer2 Stopped
; 0000 00F0 // Mode: Normal top=0xFF
; 0000 00F1 // OC2 output: Disconnected
; 0000 00F2 ASSR=0x00;
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0000 00F3 TCCR2=0x00;
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0000 00F4 TCNT2=0x00;
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 00F5 OCR2=0x00;
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
; 0000 00F6 
; 0000 00F7 // External Interrupt(s) initialization
; 0000 00F8 // INT0: On
; 0000 00F9 // INT0 Mode: Low level
; 0000 00FA // INT1: On
; 0000 00FB // INT1 Mode: Low level
; 0000 00FC GICR|=0xC0;
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 00FD MCUCR=0x00;
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 00FE GIFR=0xC0;
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 00FF 
; 0000 0100 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0101 TIMSK=0x04;
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
; 0000 0102 
; 0000 0103 // USART initialization
; 0000 0104 // USART disabled
; 0000 0105 UCSRB=0x00;
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 0106 
; 0000 0107 // Analog Comparator initialization
; 0000 0108 // Analog Comparator: Off
; 0000 0109 // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 010A ACSR=0x80;
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0000 010B SFIOR=0x00;
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 010C 
; 0000 010D // ADC initialization
; 0000 010E // ADC disabled
; 0000 010F ADCSRA=0x00;
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0000 0110 
; 0000 0111 // SPI initialization
; 0000 0112 // SPI disabled
; 0000 0113 SPCR=0x00;
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
; 0000 0114 
; 0000 0115 // TWI initialization
; 0000 0116 // TWI disabled
; 0000 0117 TWCR=0x00;
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 0118 
; 0000 0119 // Global enable interrupts
; 0000 011A #asm("sei")
;PCODE: $00000202 VOL: 0
	sei
;PCODE: $00000203 VOL: 0
; 0000 011B 
; 0000 011C while (1)
;PCODE: $00000204 VOL: 0
; 0000 011D       {
; 0000 011E       // Place your code here
; 0000 011F 
; 0000 0120           if(cnt_line<max_line && ready==1)
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0000 0121           {
; 0000 0122               tmr_int = TCNT1L | TCNT1H << 8;
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
; 0000 0123               if(tmr_int>tmr_line*cnt_line)
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 0124               {
; 0000 0125 //                curent_line--;
; 0000 0126 //                cnt_line++;
; 0000 0127 //                if (curent_line<1) {curent_line=max_line;}
; 0000 0128                 curent_line++;
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 0129                 cnt_line++;
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
; 0000 012A                 if (curent_line==max_line) {curent_line=0;}
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
; 0000 012B                 if (n_pic==1){set_led_state(a[curent_line],b[curent_line],c[curent_line]);}
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 012C                 if (n_pic==2){set_led_state(a2[curent_line],b2[curent_line],c2[curent_line]);}
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
; 0000 012D                 if (n_pic==3){set_led_state(a3[curent_line],b3[curent_line],c3[curent_line]);}
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
; 0000 012E                 if (n_pic==4){set_led_state(a4[curent_line],b4[curent_line],c4[curent_line]);}
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
; 0000 012F                 if (n_pic==5){set_led_state(a5[curent_line],b5[curent_line],c5[curent_line]);}
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
; 0000 0130                 if (n_pic==6){set_led_state(a6[curent_line],b6[curent_line],c6[curent_line]);}
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
; 0000 0131               }
;PCODE: $00000289 VOL: 0
; 0000 0132           }
;PCODE: $0000028A VOL: 0
; 0000 0133               else
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0000 0134               {
; 0000 0135                set_led_state(0,0,0);
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
; 0000 0136               }
;PCODE: $00000293 VOL: 0
; 0000 0137         ready=1;
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 0138       }
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
; 0000 0139 }
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
